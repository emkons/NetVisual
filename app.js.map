{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/nanoid/index.browser.js","webpack:///./src/components/Controls/ZoomButtons/style.scss","webpack:///./src/components/Controls/Layouts/style.scss","webpack:///./src/components/Controls/AddEdge/style.scss","webpack:///./src/Graphy/layout/util.ts","webpack:///./src/Graphy/classes/Events.ts","webpack:///./src/components/Canvas/style.scss","webpack:///./src/components/Controls/style.scss","webpack:///./src/components/Controls/Expander/style.scss","webpack:///./src/components/Controls/StatusBar/style.scss","webpack:///./src/components/Controls/DataObjectInfo/style.scss","webpack:///./node_modules/preact/dist/preact.mjs","webpack:///./src/Graphy/util.ts","webpack:///./src/Graphy/classes/Abstract.ts","webpack:///./src/Graphy/classes/Graph.ts","webpack:///./src/Graphy/classes/Settings.ts","webpack:///./src/Graphy/classes/Renderer.ts","webpack:///./src/Graphy/renderer/Canvas/CanvasNodes.ts","webpack:///./src/Graphy/renderer/Canvas/CanvasEdges.ts","webpack:///./src/Graphy/renderer/Canvas.ts","webpack:///./src/Graphy/classes/Camera.ts","webpack:///./src/Graphy/Instance.ts","webpack:///./src/Graphy/Graphy.ts","webpack:///./src/components/Canvas/index.tsx","webpack:///./src/components/Controls/Expander/index.tsx","webpack:///./src/lib/util.ts","webpack:///./src/components/Controls/StatusBar/index.tsx","webpack:///./src/components/Controls/ZoomButtons/index.tsx","webpack:///./src/Graphy/classes/Parser.ts","webpack:///./src/Graphy/parser/GraphMLParser.ts","webpack:///./src/components/Controls/Samples/index.tsx","webpack:///./src/components/Controls/Importer/index.tsx","webpack:///./src/components/Controls/DataObjectInfo/index.tsx","webpack:///./src/components/Controls/Layouts/index.tsx","webpack:///./src/components/Controls/AddEdge/index.tsx","webpack:///./src/components/Controls/index.tsx","webpack:///./src/components/App/index.tsx","webpack:///./src/app.tsx"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","installedModules","0","__webpack_require__","exports","module","l","e","promises","installedChunkData","promise","Promise","resolve","reject","onScriptComplete","script","document","createElement","charset","timeout","nc","setAttribute","src","p","1","jsonpScriptSrc","event","onerror","onload","clearTimeout","chunk","errorType","type","realSrc","target","error","Error","request","undefined","setTimeout","head","appendChild","all","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","oe","err","console","jsonpArray","window","oldJsonpFunction","slice","s","crypto","self","msCrypto","size","id","bytes","getRandomValues","Uint8Array","container","zoom-btn","zoomBtn","start","stop","layouts","add-btn","addBtn","forceNodes","n1","n2","attract","biDirectional","xDist","x","yDist","y","dist","sumSqrt","force","assignForce","getForce","Math","sqrt","layoutProps","f","eigenPower","inMatrix","values","vectors","matrix","map","row","col","iters","Infinity","random","lambdaOld","newX","reduce","prev","curr","index","lambdaNew","abs","newXNorm","el","x11","prevX","maxEl","forEach","j","dotprod","X1","__webpack_exports__","Events","nanoid__WEBPACK_IMPORTED_MODULE_0__","nanoid__WEBPACK_IMPORTED_MODULE_0___default","[object Object]","this","events","callback","eventId","payload","controls","children-exiting","childrenExiting","status-bar","statusBar","VNode","preact_options","stack","EMPTY_CHILDREN","preact_h","nodeName","attributes","lastSimple","child","simple","children","arguments","pop","String","vnode","extend","obj","props","applyRef","ref","current","defer","then","IS_NON_DIMENSIONAL","items","enqueueRender","component","_dirty","debounceRendering","rerender","renderComponent","isNamedNode","node","normalizedNodeName","toLowerCase","getNodeProps","defaultProps","removeNode","parentNode","removeChild","setAccessor","old","isSvg","style","cssText","test","innerHTML","__html","useCapture","replace","substring","addEventListener","eventProxy","removeEventListener","_listeners","removeAttribute","removeAttributeNS","setAttributeNS","className","mounts","diffLevel","isSvgMode","hydrating","flushMounts","afterMount","componentDidMount","diff","dom","context","mountAll","parent","componentRoot","ownerSVGElement","ret","idiff","out","prevSvgMode","splitText","_component","nodeValue","createTextNode","replaceChild","recollectNodeTree","vnodeName","originalComponent","oldDom","isDirectOwner","_componentConstructor","isOwner","_parentComponent","constructor","setComponentProps","base","unmountComponent","createComponent","nextBase","buildComponentFromVNode","createElementNS","firstChild","fc","vchildren","a","nextSibling","isHydrating","vchild","originalChildren","childNodes","keyed","keyedLen","min","len","childrenLen","vlen","_child","__key","trim","insertBefore","innerDiffNode","dangerouslySetInnerHTML","attrs","diffAttributes","unmountOnly","removeChildren","lastChild","next","previousSibling","recyclerComponents","Ctor","inst","render","Component","doRender","splice","state","renderMode","_disable","__ref","getDerivedStateFromProps","componentWillMount","componentWillReceiveProps","prevContext","prevProps","syncComponentUpdates","isChild","rendered","cbase","previousProps","previousState","prevState","previousContext","isUpdate","initialBase","initialChildComponent","skip","snapshot","shouldComponentUpdate","componentWillUpdate","getChildContext","getSnapshotBeforeUpdate","toUnmount","childComponent","childProps","baseParent","componentRef","componentDidUpdate","afterUpdate","_renderCallbacks","beforeUnmount","componentWillUnmount","inner","merge","setState","forceUpdate","isID","isIDArray","ids","Array","isArray","every","isCanvas","HTMLCanvasElement","resolveNestedProp","path","split","getEdgeCrossings","graph","edges","onSegment","q","max","orientation","val","doOverlap","crossings","e1","e2","n3","n4","o1","o2","o3","o4","doIntercest","source","GraphyComponent","root","options","settings","namespace","initSettings","setOption","initComponent","getOption","namespacedGetter","namespacedSetter","Graph_Graph","super","nodesArray","edgesArray","nodesIndex","edgesIndex","adjacencyListIn","adjacencyListOut","adjacencyListAll","init","parseGraph","dispatch","nodes","addNode","edge","addEdge","_clearObj","prop","keys","filter","dropEdge","index_browser_default","tmpEdge","nodesCount","edgesCount","queue","currentLength","currentIndex","Settings_Settings","default","defaultNodeSize","defaultEdgeWidth","defaultEdgeColor","defaultNodeColor","set","res","currPath","indexOf","substr","lastIndexOf","resolveNestedPropWithFallback","Renderer_Renderer","CanvasNodes","save","camProps","hover","fillStyle","color","beginPath","arc","PI","closePath","fill","restore","CanvasEdges","strokeStyle","lineWidth","moveTo","lineTo","stroke","Canvas_CanvasRenderer","queuedRender","domElements","contexts","nodeRenderers","edgeRenderers","shouldAddEdge","addingEdge","HTMLElement","queueRender","subscribe","initDOM","scene","labels","registerNodeRenderer","registerEdgeRenderer","addEventListeners","resize","tag","position","getContext","requestAnimationFrame","hoverNodes","handleMove","newHoverNodes","dX","clientX","dY","clientY","assign","floor","preventDefault","log","touches","w","h","oldWidth","width","oldHeigth","height","offsetWidth","offsetHeight","camera","getNodeCoords","clear","clearRect","renderer","Camera_Camera","zoom","deltaY","dragStart","coords","graphy","initOptions","components_Canvas","sigma","class","g","edgeCount","ceil","Expander_Expander","outgoingChildren","lastElHeight","nextProps","nextChildren","getBoundingClientRect","prevChildren","overflow","newHeight","opts","from","to","duration","easing","getComputedStyle","transform","transition","listener","transitionHeight","Expander_style","StatusBar_StatusBar","nodeCount","edgeCrossings","edgeStats","mean","stdev","StatusBar_style","toFixed","onClick","calculateStats","updateNodeEdgeCount","stats","lengths","dx","dy","util","sumSQ","calculateEdgeLengthStats","ZoomButtons_ZoomButtons","ZoomButtons_style","zoomIn","zoomOut","Parser","GraphMLParser_GraphMLParser","parser","DOMParser","content","parseFromString","getElementsByTagName","getAttributeNames","attr","getAttribute","dataAttrs","dataAttr","tmpNum","parseFloat","NaN","Samples_Samples","urls","url","examples","loadSample","fetch","response","text","parse","Importer_Importer","onChange","upload","input","files","reader","FileReader","result","readAsText","DataObjectInfo_DataObjectInfo","activeObject","nodeContent","DataObjectInfo_style","Layouts_Layouts","selected","running","algos","selectedAlgo","iterationCb","doneCb","startStopBtn","Layouts_style","stopLayout","startLayout","runtimeStats","getInitRuntime","getTotalRuntime","disabled","changeMethod","algo","kk","fa","fr","mds","isom","AddEdge_AddEdge","AddEdge_style","Controls_Controls","Controls_style","components_App","getElementById","body"],"mappings":"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","file":"app.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t};\n\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"\" + ({\"1\":\"layout\"}[chunkId]||chunkId) + \".js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar script = document.createElement('script');\n \t\t\t\tvar onScriptComplete;\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n\n \t\t\t\tonScriptComplete = function (event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\tvar error = new Error('Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')');\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\tdocument.head.appendChild(script);\n \t\t\t}\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 12);\n","if (process.env.NODE_ENV !== 'production') {\n  if (typeof self === 'undefined' || (!self.crypto && !self.msCrypto)) {\n    throw new Error(\n      'Your browser does not have secure random generator. ' +\n      'If you don’t need unpredictable IDs, you can use nanoid/non-secure.'\n    )\n  }\n}\n\nvar crypto = self.crypto || self.msCrypto\n\n/*\n * This alphabet uses a-z A-Z 0-9 _- symbols.\n * Symbols order was changed for better gzip compression.\n */\nvar url = 'Uint8ArdomValuesObj012345679BCDEFGHIJKLMNPQRSTWXYZ_cfghkpqvwxyz-'\n\nmodule.exports = function (size) {\n  size = size || 21\n  var id = ''\n  var bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (0 < size--) {\n    id += url[bytes[size] & 63]\n  }\n  return id\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"_27aoy\",\"zoom-btn\":\"_2P67K\",\"zoomBtn\":\"_2P67K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"start\":\"_1nsBz\",\"stop\":\"_2rRno\",\"layouts\":\"_2ECbp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"add-btn\":\"XWh_d\",\"addBtn\":\"XWh_d\"};","import { Node } from '../classes/Graph'\r\n\r\nexport function forceNodes(\r\n  n1: Node,\r\n  n2: Node,\r\n  c: number | ((dist: number) => number),\r\n  attract: boolean,\r\n  size: boolean = false,\r\n  biDirectional: boolean = true\r\n): void {\r\n  const xDist = n1.x - n2.x\r\n  const yDist = n1.y - n2.y\r\n  let dist = sumSqrt(xDist, yDist)\r\n  if (size) {\r\n    dist -= n1.size + n2.size\r\n  }\r\n  if (dist > 0) {\r\n    let force: number\r\n    if (attract) force = getForce(-1 / dist, c)\r\n    else force = getForce(dist / 0.1, c)\r\n\r\n    assignForce(n2, xDist, yDist, dist, -force)\r\n    if (biDirectional) assignForce(n1, xDist, yDist, dist, force)\r\n  }\r\n}\r\n\r\nexport function sumSqrt(x: number, y: number): number {\r\n  return Math.sqrt(x * x + y * y)\r\n}\r\n\r\nfunction getForce(dist: number, c: number | ((dist: number) => number)): number {\r\n  if (typeof c === 'number') {\r\n    return (0.01 * c) / dist\r\n  }\r\n  return c(dist)\r\n}\r\n\r\nexport function assignForce(n: Node, x: number, y: number, dist: number, force: number): void {\r\n  n.layoutProps.f.x += (x / dist) * force\r\n  n.layoutProps.f.y += (y / dist) * force\r\n}\r\n\r\nexport function calculateEigenVector(\r\n  inMatrix: number[][]\r\n): { values: number[]; vectors: number[][] } {\r\n  // Copy matrix\r\n  const matrix = inMatrix.map(row => row.map(col => col))\r\n  const maxIters = 100000\r\n  let iters = 0\r\n  const outValues: number[] = []\r\n  const outVectors: number[][] = []\r\n  const ind: number[] = []\r\n  const changed: boolean[] = []\r\n  let state: number = matrix.length\r\n  let c: number\r\n  let s: number\r\n\r\n  const maxIndex = (k: number) => {\r\n    let m = k + 1\r\n    for (let i = k + 2; i < matrix.length; i += 1) {\r\n      if (matrix[k][i] > matrix[k][m]) m = i\r\n    }\r\n    return m\r\n  }\r\n\r\n  const update = (k: number, t: number) => {\r\n    const y = outValues[k] || 0\r\n    outValues[k] = y + t\r\n    if (changed[k] && y === outValues[k]) {\r\n      changed[k] = false\r\n      state -= 1\r\n    } else if (!changed[k] && y !== outValues[k]) {\r\n      changed[k] = true\r\n      state += 1\r\n    }\r\n  }\r\n\r\n  const rotate = (k: number, l: number, i: number, j: number) => {\r\n    const newSkl = c * matrix[k][l] - s * matrix[i][j]\r\n    const newSij = s * matrix[k][l] + c * matrix[i][j]\r\n    matrix[k][l] = newSkl\r\n    matrix[i][j] = newSij\r\n  }\r\n\r\n  // Initialize\r\n  state = matrix.length\r\n  for (let i = 0; i < matrix.length; i += 1) {\r\n    ind.push(maxIndex(i))\r\n    outValues.push(matrix[i][i])\r\n    changed.push(true)\r\n    const oVCol: number[] = []\r\n    outVectors.push(oVCol)\r\n    for (let j = 0; j < matrix.length; j += 1) {\r\n      if (i === j) oVCol.push(1)\r\n      else oVCol.push(0)\r\n    }\r\n  }\r\n\r\n  // Loop until no more changes or max iterations reached\r\n  while (state > 0 && iters < maxIters) {\r\n    iters += 1\r\n    let m = 1\r\n    for (let k = 2; k < matrix.length - 1; k += 1) {\r\n      if (matrix[k][ind[k]] > matrix[m][ind[m]]) {\r\n        m = k\r\n      }\r\n    }\r\n    const k = m\r\n    const l = ind[m]\r\n    const p = matrix[k][l]\r\n    // Calcualte cos and sin\r\n    const y = (outValues[l] - outValues[k]) / 2\r\n    const d = Math.abs(y) + sumSqrt(p, y)\r\n    const r = sumSqrt(p, d)\r\n    c = d / r\r\n    s = p / r\r\n    let t = (p * p) / d\r\n    if (y < 0) {\r\n      s = -s\r\n      t = -t\r\n    }\r\n    matrix[k][l] = 0\r\n    update(k, -t)\r\n    update(l, t)\r\n    // Rotate rows and columns\r\n    for (let i = 0; i < k; i += 1) {\r\n      rotate(i, k, i, l)\r\n    }\r\n    for (let i = k; i < l; i += 1) {\r\n      rotate(k, i, i, l)\r\n    }\r\n    for (let i = l; i < matrix.length; i += 1) {\r\n      rotate(k, i, l, i)\r\n    }\r\n    // Rotate eigenvectors\r\n    for (let i = 0; i < matrix.length; i += 1) {\r\n      const newEik = c * outVectors[i][k] - s * outVectors[i][l]\r\n      const newEil = s * outVectors[i][k] + c * outVectors[i][l]\r\n      outVectors[i][k] = newEik\r\n      outVectors[i][l] = newEil\r\n    }\r\n    ind[k] = maxIndex(k)\r\n    ind[l] = maxIndex(l)\r\n  }\r\n\r\n  return {\r\n    values: outValues,\r\n    vectors: outVectors,\r\n  }\r\n}\r\n\r\nexport function eigenPower(inMatrix: number[][]): { values: number[]; vectors: number[][] } {\r\n  const values: number[] = []\r\n  const vectors: number[][] = []\r\n\r\n  // Copy matrix\r\n  let matrix = inMatrix.map(row => row.map(col => col))\r\n  const maxIters = 10000\r\n  let iters = 0\r\n  const n = matrix.length\r\n  let err = Infinity\r\n  let x: number[] = []\r\n  for (let i = 0; i < n; i += 1) {\r\n    x.push(Math.random())\r\n  }\r\n  let lambdaOld = 1\r\n\r\n  // Get 1st eigenvector and eigenvalue\r\n  while (err > 0.001 && iters < maxIters) {\r\n    iters += 1\r\n    // Multiply matrix with x\r\n    const newX = matrix.map(row => row.reduce((prev, curr, index) => prev + curr * x[index], 0))\r\n    const lambdaNew = newX.reduce(\r\n      (prev, curr) => (Math.abs(curr) > prev ? Math.abs(curr) : prev),\r\n      -Infinity\r\n    )\r\n    const newXNorm = newX.map(el => el / lambdaNew)\r\n    x = newXNorm\r\n    err = Math.abs(lambdaNew - lambdaOld)\r\n    lambdaOld = lambdaNew\r\n  }\r\n  values.push(lambdaOld)\r\n  const x11 = x.map(el => el)\r\n  vectors.push(x11)\r\n  // console.log('vector', x)\r\n  // console.log('val', lambdaOld)\r\n  // console.log('matrix', matrix)\r\n\r\n  let prevX = x11\r\n\r\n  for (let i = 0; i < n / 2; i += 1) {\r\n    // Remove 1st eigenvector from matrix\r\n    let maxEl = -Infinity\r\n    matrix.forEach(row => {\r\n      row.forEach(col => {\r\n        maxEl = col > maxEl ? col : maxEl\r\n      })\r\n    })\r\n    matrix = matrix.map((row, i) => row.map((col, j) => col - (lambdaOld * x[i] * x[j]) / maxEl))\r\n\r\n    // Get 2nd eigenvector and eigenvalue\r\n    iters = 0\r\n    err = Infinity\r\n    x = x.map(el => Math.random())\r\n    const dotprod = x.reduce((prev, curr, index) => {\r\n      return prev + curr * prevX[index]\r\n    }, 0)\r\n    if (dotprod > -1 && dotprod < 1) {\r\n      const X1 = prevX[0]\r\n      x[0] = -dotprod / X1\r\n    }\r\n    while (err > 0.001 && iters < maxIters) {\r\n      iters += 1\r\n      // Multiply matrix with x\r\n      const newX = matrix.map(row => row.reduce((prev, curr, index) => prev + curr * x[index], 0))\r\n      const lambdaNew = newX.reduce(\r\n        (prev, curr) => (Math.abs(curr) > prev ? Math.abs(curr) : prev),\r\n        -Infinity\r\n      )\r\n      // // Shitty way of trying to orthogonalize\r\n      // if (iters % 11 === 0) {\r\n      //   const dotprod = newX.reduce((prev, curr, index) => {\r\n      //     return prev + curr * x11[index]\r\n      //   }, 0)\r\n      //   if (dotprod > -10 && dotprod < 10) {\r\n      //     const X1 = x11[0]\r\n      //     newXNorm[0] = -dotprod / X1\r\n      //   }\r\n      // }\r\n      const newXNorm = newX.map(el => el / lambdaNew)\r\n      x = newXNorm\r\n      err = Math.abs(lambdaNew - lambdaOld)\r\n      lambdaOld = lambdaNew\r\n    }\r\n    values.push(lambdaOld)\r\n    prevX = x.map(el => el)\r\n    vectors.push(x.map(el => el))\r\n    if (Math.abs(Math.abs(x[0]) - Math.abs(x11[0])) > 0.01) {\r\n      vectors[1] = x\r\n      values[1] = lambdaOld\r\n      break\r\n    }\r\n  }\r\n  // console.log('vector', x)\r\n  // console.log('val', lambdaOld)\r\n  // console.log('matrix', matrix)\r\n\r\n  return {\r\n    values,\r\n    vectors,\r\n  }\r\n}\r\n","import nanoid from 'nanoid'\r\n\r\ninterface IEvents {\r\n  [name: string]: IEvent\r\n}\r\n\r\ninterface IEvent {\r\n  [eventId: string]: (payload: any) => void\r\n}\r\n\r\nexport default class Events {\r\n  private events: IEvents = {}\r\n\r\n  public subscribe(name: string, callback: (payload: any) => void): string {\r\n    if (!(name in this.events)) {\r\n      this.events[name] = {}\r\n    }\r\n    const eventId = nanoid()\r\n    this.events[name][eventId] = callback\r\n    return eventId\r\n  }\r\n\r\n  public unsub(name: string, eventId: string): boolean {\r\n    if (name in this.events && eventId in this.events[name]) {\r\n      delete this.events[name][eventId]\r\n      return true\r\n    }\r\n    return false\r\n  }\r\n\r\n  public dispatch(name: string, payload: any): void {\r\n    if (name in this.events) {\r\n      for (const event in this.events[name]) {\r\n        this.events[name][event](payload)\r\n      }\r\n    }\r\n  }\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"_36KXl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"controls\":\"JRCll\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"children-exiting\":\"_4mSPn\",\"childrenExiting\":\"_4mSPn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"status-bar\":\"_7vG4Z\",\"statusBar\":\"_7vG4Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"_2upJf\"};","var VNode = function VNode() {};\n\nvar options = {};\n\nvar stack = [];\n\nvar EMPTY_CHILDREN = [];\n\nfunction h(nodeName, attributes) {\n\tvar children = EMPTY_CHILDREN,\n\t    lastSimple,\n\t    child,\n\t    simple,\n\t    i;\n\tfor (i = arguments.length; i-- > 2;) {\n\t\tstack.push(arguments[i]);\n\t}\n\tif (attributes && attributes.children != null) {\n\t\tif (!stack.length) stack.push(attributes.children);\n\t\tdelete attributes.children;\n\t}\n\twhile (stack.length) {\n\t\tif ((child = stack.pop()) && child.pop !== undefined) {\n\t\t\tfor (i = child.length; i--;) {\n\t\t\t\tstack.push(child[i]);\n\t\t\t}\n\t\t} else {\n\t\t\tif (typeof child === 'boolean') child = null;\n\n\t\t\tif (simple = typeof nodeName !== 'function') {\n\t\t\t\tif (child == null) child = '';else if (typeof child === 'number') child = String(child);else if (typeof child !== 'string') simple = false;\n\t\t\t}\n\n\t\t\tif (simple && lastSimple) {\n\t\t\t\tchildren[children.length - 1] += child;\n\t\t\t} else if (children === EMPTY_CHILDREN) {\n\t\t\t\tchildren = [child];\n\t\t\t} else {\n\t\t\t\tchildren.push(child);\n\t\t\t}\n\n\t\t\tlastSimple = simple;\n\t\t}\n\t}\n\n\tvar p = new VNode();\n\tp.nodeName = nodeName;\n\tp.children = children;\n\tp.attributes = attributes == null ? undefined : attributes;\n\tp.key = attributes == null ? undefined : attributes.key;\n\n\tif (options.vnode !== undefined) options.vnode(p);\n\n\treturn p;\n}\n\nfunction extend(obj, props) {\n  for (var i in props) {\n    obj[i] = props[i];\n  }return obj;\n}\n\nfunction applyRef(ref, value) {\n  if (ref != null) {\n    if (typeof ref == 'function') ref(value);else ref.current = value;\n  }\n}\n\nvar defer = typeof Promise == 'function' ? Promise.resolve().then.bind(Promise.resolve()) : setTimeout;\n\nfunction cloneElement(vnode, props) {\n  return h(vnode.nodeName, extend(extend({}, vnode.attributes), props), arguments.length > 2 ? [].slice.call(arguments, 2) : vnode.children);\n}\n\nvar IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|ows|mnc|ntw|ine[ch]|zoo|^ord/i;\n\nvar items = [];\n\nfunction enqueueRender(component) {\n\tif (!component._dirty && (component._dirty = true) && items.push(component) == 1) {\n\t\t(options.debounceRendering || defer)(rerender);\n\t}\n}\n\nfunction rerender() {\n\tvar p;\n\twhile (p = items.pop()) {\n\t\tif (p._dirty) renderComponent(p);\n\t}\n}\n\nfunction isSameNodeType(node, vnode, hydrating) {\n\tif (typeof vnode === 'string' || typeof vnode === 'number') {\n\t\treturn node.splitText !== undefined;\n\t}\n\tif (typeof vnode.nodeName === 'string') {\n\t\treturn !node._componentConstructor && isNamedNode(node, vnode.nodeName);\n\t}\n\treturn hydrating || node._componentConstructor === vnode.nodeName;\n}\n\nfunction isNamedNode(node, nodeName) {\n\treturn node.normalizedNodeName === nodeName || node.nodeName.toLowerCase() === nodeName.toLowerCase();\n}\n\nfunction getNodeProps(vnode) {\n\tvar props = extend({}, vnode.attributes);\n\tprops.children = vnode.children;\n\n\tvar defaultProps = vnode.nodeName.defaultProps;\n\tif (defaultProps !== undefined) {\n\t\tfor (var i in defaultProps) {\n\t\t\tif (props[i] === undefined) {\n\t\t\t\tprops[i] = defaultProps[i];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn props;\n}\n\nfunction createNode(nodeName, isSvg) {\n\tvar node = isSvg ? document.createElementNS('http://www.w3.org/2000/svg', nodeName) : document.createElement(nodeName);\n\tnode.normalizedNodeName = nodeName;\n\treturn node;\n}\n\nfunction removeNode(node) {\n\tvar parentNode = node.parentNode;\n\tif (parentNode) parentNode.removeChild(node);\n}\n\nfunction setAccessor(node, name, old, value, isSvg) {\n\tif (name === 'className') name = 'class';\n\n\tif (name === 'key') {} else if (name === 'ref') {\n\t\tapplyRef(old, null);\n\t\tapplyRef(value, node);\n\t} else if (name === 'class' && !isSvg) {\n\t\tnode.className = value || '';\n\t} else if (name === 'style') {\n\t\tif (!value || typeof value === 'string' || typeof old === 'string') {\n\t\t\tnode.style.cssText = value || '';\n\t\t}\n\t\tif (value && typeof value === 'object') {\n\t\t\tif (typeof old !== 'string') {\n\t\t\t\tfor (var i in old) {\n\t\t\t\t\tif (!(i in value)) node.style[i] = '';\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (var i in value) {\n\t\t\t\tnode.style[i] = typeof value[i] === 'number' && IS_NON_DIMENSIONAL.test(i) === false ? value[i] + 'px' : value[i];\n\t\t\t}\n\t\t}\n\t} else if (name === 'dangerouslySetInnerHTML') {\n\t\tif (value) node.innerHTML = value.__html || '';\n\t} else if (name[0] == 'o' && name[1] == 'n') {\n\t\tvar useCapture = name !== (name = name.replace(/Capture$/, ''));\n\t\tname = name.toLowerCase().substring(2);\n\t\tif (value) {\n\t\t\tif (!old) node.addEventListener(name, eventProxy, useCapture);\n\t\t} else {\n\t\t\tnode.removeEventListener(name, eventProxy, useCapture);\n\t\t}\n\t\t(node._listeners || (node._listeners = {}))[name] = value;\n\t} else if (name !== 'list' && name !== 'type' && !isSvg && name in node) {\n\t\ttry {\n\t\t\tnode[name] = value == null ? '' : value;\n\t\t} catch (e) {}\n\t\tif ((value == null || value === false) && name != 'spellcheck') node.removeAttribute(name);\n\t} else {\n\t\tvar ns = isSvg && name !== (name = name.replace(/^xlink:?/, ''));\n\n\t\tif (value == null || value === false) {\n\t\t\tif (ns) node.removeAttributeNS('http://www.w3.org/1999/xlink', name.toLowerCase());else node.removeAttribute(name);\n\t\t} else if (typeof value !== 'function') {\n\t\t\tif (ns) node.setAttributeNS('http://www.w3.org/1999/xlink', name.toLowerCase(), value);else node.setAttribute(name, value);\n\t\t}\n\t}\n}\n\nfunction eventProxy(e) {\n\treturn this._listeners[e.type](options.event && options.event(e) || e);\n}\n\nvar mounts = [];\n\nvar diffLevel = 0;\n\nvar isSvgMode = false;\n\nvar hydrating = false;\n\nfunction flushMounts() {\n\tvar c;\n\twhile (c = mounts.shift()) {\n\t\tif (options.afterMount) options.afterMount(c);\n\t\tif (c.componentDidMount) c.componentDidMount();\n\t}\n}\n\nfunction diff(dom, vnode, context, mountAll, parent, componentRoot) {\n\tif (!diffLevel++) {\n\t\tisSvgMode = parent != null && parent.ownerSVGElement !== undefined;\n\n\t\thydrating = dom != null && !('__preactattr_' in dom);\n\t}\n\n\tvar ret = idiff(dom, vnode, context, mountAll, componentRoot);\n\n\tif (parent && ret.parentNode !== parent) parent.appendChild(ret);\n\n\tif (! --diffLevel) {\n\t\thydrating = false;\n\n\t\tif (!componentRoot) flushMounts();\n\t}\n\n\treturn ret;\n}\n\nfunction idiff(dom, vnode, context, mountAll, componentRoot) {\n\tvar out = dom,\n\t    prevSvgMode = isSvgMode;\n\n\tif (vnode == null || typeof vnode === 'boolean') vnode = '';\n\n\tif (typeof vnode === 'string' || typeof vnode === 'number') {\n\t\tif (dom && dom.splitText !== undefined && dom.parentNode && (!dom._component || componentRoot)) {\n\t\t\tif (dom.nodeValue != vnode) {\n\t\t\t\tdom.nodeValue = vnode;\n\t\t\t}\n\t\t} else {\n\t\t\tout = document.createTextNode(vnode);\n\t\t\tif (dom) {\n\t\t\t\tif (dom.parentNode) dom.parentNode.replaceChild(out, dom);\n\t\t\t\trecollectNodeTree(dom, true);\n\t\t\t}\n\t\t}\n\n\t\tout['__preactattr_'] = true;\n\n\t\treturn out;\n\t}\n\n\tvar vnodeName = vnode.nodeName;\n\tif (typeof vnodeName === 'function') {\n\t\treturn buildComponentFromVNode(dom, vnode, context, mountAll);\n\t}\n\n\tisSvgMode = vnodeName === 'svg' ? true : vnodeName === 'foreignObject' ? false : isSvgMode;\n\n\tvnodeName = String(vnodeName);\n\tif (!dom || !isNamedNode(dom, vnodeName)) {\n\t\tout = createNode(vnodeName, isSvgMode);\n\n\t\tif (dom) {\n\t\t\twhile (dom.firstChild) {\n\t\t\t\tout.appendChild(dom.firstChild);\n\t\t\t}\n\t\t\tif (dom.parentNode) dom.parentNode.replaceChild(out, dom);\n\n\t\t\trecollectNodeTree(dom, true);\n\t\t}\n\t}\n\n\tvar fc = out.firstChild,\n\t    props = out['__preactattr_'],\n\t    vchildren = vnode.children;\n\n\tif (props == null) {\n\t\tprops = out['__preactattr_'] = {};\n\t\tfor (var a = out.attributes, i = a.length; i--;) {\n\t\t\tprops[a[i].name] = a[i].value;\n\t\t}\n\t}\n\n\tif (!hydrating && vchildren && vchildren.length === 1 && typeof vchildren[0] === 'string' && fc != null && fc.splitText !== undefined && fc.nextSibling == null) {\n\t\tif (fc.nodeValue != vchildren[0]) {\n\t\t\tfc.nodeValue = vchildren[0];\n\t\t}\n\t} else if (vchildren && vchildren.length || fc != null) {\n\t\t\tinnerDiffNode(out, vchildren, context, mountAll, hydrating || props.dangerouslySetInnerHTML != null);\n\t\t}\n\n\tdiffAttributes(out, vnode.attributes, props);\n\n\tisSvgMode = prevSvgMode;\n\n\treturn out;\n}\n\nfunction innerDiffNode(dom, vchildren, context, mountAll, isHydrating) {\n\tvar originalChildren = dom.childNodes,\n\t    children = [],\n\t    keyed = {},\n\t    keyedLen = 0,\n\t    min = 0,\n\t    len = originalChildren.length,\n\t    childrenLen = 0,\n\t    vlen = vchildren ? vchildren.length : 0,\n\t    j,\n\t    c,\n\t    f,\n\t    vchild,\n\t    child;\n\n\tif (len !== 0) {\n\t\tfor (var i = 0; i < len; i++) {\n\t\t\tvar _child = originalChildren[i],\n\t\t\t    props = _child['__preactattr_'],\n\t\t\t    key = vlen && props ? _child._component ? _child._component.__key : props.key : null;\n\t\t\tif (key != null) {\n\t\t\t\tkeyedLen++;\n\t\t\t\tkeyed[key] = _child;\n\t\t\t} else if (props || (_child.splitText !== undefined ? isHydrating ? _child.nodeValue.trim() : true : isHydrating)) {\n\t\t\t\tchildren[childrenLen++] = _child;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (vlen !== 0) {\n\t\tfor (var i = 0; i < vlen; i++) {\n\t\t\tvchild = vchildren[i];\n\t\t\tchild = null;\n\n\t\t\tvar key = vchild.key;\n\t\t\tif (key != null) {\n\t\t\t\tif (keyedLen && keyed[key] !== undefined) {\n\t\t\t\t\tchild = keyed[key];\n\t\t\t\t\tkeyed[key] = undefined;\n\t\t\t\t\tkeyedLen--;\n\t\t\t\t}\n\t\t\t} else if (min < childrenLen) {\n\t\t\t\t\tfor (j = min; j < childrenLen; j++) {\n\t\t\t\t\t\tif (children[j] !== undefined && isSameNodeType(c = children[j], vchild, isHydrating)) {\n\t\t\t\t\t\t\tchild = c;\n\t\t\t\t\t\t\tchildren[j] = undefined;\n\t\t\t\t\t\t\tif (j === childrenLen - 1) childrenLen--;\n\t\t\t\t\t\t\tif (j === min) min++;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\tchild = idiff(child, vchild, context, mountAll);\n\n\t\t\tf = originalChildren[i];\n\t\t\tif (child && child !== dom && child !== f) {\n\t\t\t\tif (f == null) {\n\t\t\t\t\tdom.appendChild(child);\n\t\t\t\t} else if (child === f.nextSibling) {\n\t\t\t\t\tremoveNode(f);\n\t\t\t\t} else {\n\t\t\t\t\tdom.insertBefore(child, f);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tif (keyedLen) {\n\t\tfor (var i in keyed) {\n\t\t\tif (keyed[i] !== undefined) recollectNodeTree(keyed[i], false);\n\t\t}\n\t}\n\n\twhile (min <= childrenLen) {\n\t\tif ((child = children[childrenLen--]) !== undefined) recollectNodeTree(child, false);\n\t}\n}\n\nfunction recollectNodeTree(node, unmountOnly) {\n\tvar component = node._component;\n\tif (component) {\n\t\tunmountComponent(component);\n\t} else {\n\t\tif (node['__preactattr_'] != null) applyRef(node['__preactattr_'].ref, null);\n\n\t\tif (unmountOnly === false || node['__preactattr_'] == null) {\n\t\t\tremoveNode(node);\n\t\t}\n\n\t\tremoveChildren(node);\n\t}\n}\n\nfunction removeChildren(node) {\n\tnode = node.lastChild;\n\twhile (node) {\n\t\tvar next = node.previousSibling;\n\t\trecollectNodeTree(node, true);\n\t\tnode = next;\n\t}\n}\n\nfunction diffAttributes(dom, attrs, old) {\n\tvar name;\n\n\tfor (name in old) {\n\t\tif (!(attrs && attrs[name] != null) && old[name] != null) {\n\t\t\tsetAccessor(dom, name, old[name], old[name] = undefined, isSvgMode);\n\t\t}\n\t}\n\n\tfor (name in attrs) {\n\t\tif (name !== 'children' && name !== 'innerHTML' && (!(name in old) || attrs[name] !== (name === 'value' || name === 'checked' ? dom[name] : old[name]))) {\n\t\t\tsetAccessor(dom, name, old[name], old[name] = attrs[name], isSvgMode);\n\t\t}\n\t}\n}\n\nvar recyclerComponents = [];\n\nfunction createComponent(Ctor, props, context) {\n\tvar inst,\n\t    i = recyclerComponents.length;\n\n\tif (Ctor.prototype && Ctor.prototype.render) {\n\t\tinst = new Ctor(props, context);\n\t\tComponent.call(inst, props, context);\n\t} else {\n\t\tinst = new Component(props, context);\n\t\tinst.constructor = Ctor;\n\t\tinst.render = doRender;\n\t}\n\n\twhile (i--) {\n\t\tif (recyclerComponents[i].constructor === Ctor) {\n\t\t\tinst.nextBase = recyclerComponents[i].nextBase;\n\t\t\trecyclerComponents.splice(i, 1);\n\t\t\treturn inst;\n\t\t}\n\t}\n\n\treturn inst;\n}\n\nfunction doRender(props, state, context) {\n\treturn this.constructor(props, context);\n}\n\nfunction setComponentProps(component, props, renderMode, context, mountAll) {\n\tif (component._disable) return;\n\tcomponent._disable = true;\n\n\tcomponent.__ref = props.ref;\n\tcomponent.__key = props.key;\n\tdelete props.ref;\n\tdelete props.key;\n\n\tif (typeof component.constructor.getDerivedStateFromProps === 'undefined') {\n\t\tif (!component.base || mountAll) {\n\t\t\tif (component.componentWillMount) component.componentWillMount();\n\t\t} else if (component.componentWillReceiveProps) {\n\t\t\tcomponent.componentWillReceiveProps(props, context);\n\t\t}\n\t}\n\n\tif (context && context !== component.context) {\n\t\tif (!component.prevContext) component.prevContext = component.context;\n\t\tcomponent.context = context;\n\t}\n\n\tif (!component.prevProps) component.prevProps = component.props;\n\tcomponent.props = props;\n\n\tcomponent._disable = false;\n\n\tif (renderMode !== 0) {\n\t\tif (renderMode === 1 || options.syncComponentUpdates !== false || !component.base) {\n\t\t\trenderComponent(component, 1, mountAll);\n\t\t} else {\n\t\t\tenqueueRender(component);\n\t\t}\n\t}\n\n\tapplyRef(component.__ref, component);\n}\n\nfunction renderComponent(component, renderMode, mountAll, isChild) {\n\tif (component._disable) return;\n\n\tvar props = component.props,\n\t    state = component.state,\n\t    context = component.context,\n\t    previousProps = component.prevProps || props,\n\t    previousState = component.prevState || state,\n\t    previousContext = component.prevContext || context,\n\t    isUpdate = component.base,\n\t    nextBase = component.nextBase,\n\t    initialBase = isUpdate || nextBase,\n\t    initialChildComponent = component._component,\n\t    skip = false,\n\t    snapshot = previousContext,\n\t    rendered,\n\t    inst,\n\t    cbase;\n\n\tif (component.constructor.getDerivedStateFromProps) {\n\t\tstate = extend(extend({}, state), component.constructor.getDerivedStateFromProps(props, state));\n\t\tcomponent.state = state;\n\t}\n\n\tif (isUpdate) {\n\t\tcomponent.props = previousProps;\n\t\tcomponent.state = previousState;\n\t\tcomponent.context = previousContext;\n\t\tif (renderMode !== 2 && component.shouldComponentUpdate && component.shouldComponentUpdate(props, state, context) === false) {\n\t\t\tskip = true;\n\t\t} else if (component.componentWillUpdate) {\n\t\t\tcomponent.componentWillUpdate(props, state, context);\n\t\t}\n\t\tcomponent.props = props;\n\t\tcomponent.state = state;\n\t\tcomponent.context = context;\n\t}\n\n\tcomponent.prevProps = component.prevState = component.prevContext = component.nextBase = null;\n\tcomponent._dirty = false;\n\n\tif (!skip) {\n\t\trendered = component.render(props, state, context);\n\n\t\tif (component.getChildContext) {\n\t\t\tcontext = extend(extend({}, context), component.getChildContext());\n\t\t}\n\n\t\tif (isUpdate && component.getSnapshotBeforeUpdate) {\n\t\t\tsnapshot = component.getSnapshotBeforeUpdate(previousProps, previousState);\n\t\t}\n\n\t\tvar childComponent = rendered && rendered.nodeName,\n\t\t    toUnmount,\n\t\t    base;\n\n\t\tif (typeof childComponent === 'function') {\n\n\t\t\tvar childProps = getNodeProps(rendered);\n\t\t\tinst = initialChildComponent;\n\n\t\t\tif (inst && inst.constructor === childComponent && childProps.key == inst.__key) {\n\t\t\t\tsetComponentProps(inst, childProps, 1, context, false);\n\t\t\t} else {\n\t\t\t\ttoUnmount = inst;\n\n\t\t\t\tcomponent._component = inst = createComponent(childComponent, childProps, context);\n\t\t\t\tinst.nextBase = inst.nextBase || nextBase;\n\t\t\t\tinst._parentComponent = component;\n\t\t\t\tsetComponentProps(inst, childProps, 0, context, false);\n\t\t\t\trenderComponent(inst, 1, mountAll, true);\n\t\t\t}\n\n\t\t\tbase = inst.base;\n\t\t} else {\n\t\t\tcbase = initialBase;\n\n\t\t\ttoUnmount = initialChildComponent;\n\t\t\tif (toUnmount) {\n\t\t\t\tcbase = component._component = null;\n\t\t\t}\n\n\t\t\tif (initialBase || renderMode === 1) {\n\t\t\t\tif (cbase) cbase._component = null;\n\t\t\t\tbase = diff(cbase, rendered, context, mountAll || !isUpdate, initialBase && initialBase.parentNode, true);\n\t\t\t}\n\t\t}\n\n\t\tif (initialBase && base !== initialBase && inst !== initialChildComponent) {\n\t\t\tvar baseParent = initialBase.parentNode;\n\t\t\tif (baseParent && base !== baseParent) {\n\t\t\t\tbaseParent.replaceChild(base, initialBase);\n\n\t\t\t\tif (!toUnmount) {\n\t\t\t\t\tinitialBase._component = null;\n\t\t\t\t\trecollectNodeTree(initialBase, false);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (toUnmount) {\n\t\t\tunmountComponent(toUnmount);\n\t\t}\n\n\t\tcomponent.base = base;\n\t\tif (base && !isChild) {\n\t\t\tvar componentRef = component,\n\t\t\t    t = component;\n\t\t\twhile (t = t._parentComponent) {\n\t\t\t\t(componentRef = t).base = base;\n\t\t\t}\n\t\t\tbase._component = componentRef;\n\t\t\tbase._componentConstructor = componentRef.constructor;\n\t\t}\n\t}\n\n\tif (!isUpdate || mountAll) {\n\t\tmounts.push(component);\n\t} else if (!skip) {\n\n\t\tif (component.componentDidUpdate) {\n\t\t\tcomponent.componentDidUpdate(previousProps, previousState, snapshot);\n\t\t}\n\t\tif (options.afterUpdate) options.afterUpdate(component);\n\t}\n\n\twhile (component._renderCallbacks.length) {\n\t\tcomponent._renderCallbacks.pop().call(component);\n\t}if (!diffLevel && !isChild) flushMounts();\n}\n\nfunction buildComponentFromVNode(dom, vnode, context, mountAll) {\n\tvar c = dom && dom._component,\n\t    originalComponent = c,\n\t    oldDom = dom,\n\t    isDirectOwner = c && dom._componentConstructor === vnode.nodeName,\n\t    isOwner = isDirectOwner,\n\t    props = getNodeProps(vnode);\n\twhile (c && !isOwner && (c = c._parentComponent)) {\n\t\tisOwner = c.constructor === vnode.nodeName;\n\t}\n\n\tif (c && isOwner && (!mountAll || c._component)) {\n\t\tsetComponentProps(c, props, 3, context, mountAll);\n\t\tdom = c.base;\n\t} else {\n\t\tif (originalComponent && !isDirectOwner) {\n\t\t\tunmountComponent(originalComponent);\n\t\t\tdom = oldDom = null;\n\t\t}\n\n\t\tc = createComponent(vnode.nodeName, props, context);\n\t\tif (dom && !c.nextBase) {\n\t\t\tc.nextBase = dom;\n\n\t\t\toldDom = null;\n\t\t}\n\t\tsetComponentProps(c, props, 1, context, mountAll);\n\t\tdom = c.base;\n\n\t\tif (oldDom && dom !== oldDom) {\n\t\t\toldDom._component = null;\n\t\t\trecollectNodeTree(oldDom, false);\n\t\t}\n\t}\n\n\treturn dom;\n}\n\nfunction unmountComponent(component) {\n\tif (options.beforeUnmount) options.beforeUnmount(component);\n\n\tvar base = component.base;\n\n\tcomponent._disable = true;\n\n\tif (component.componentWillUnmount) component.componentWillUnmount();\n\n\tcomponent.base = null;\n\n\tvar inner = component._component;\n\tif (inner) {\n\t\tunmountComponent(inner);\n\t} else if (base) {\n\t\tif (base['__preactattr_'] != null) applyRef(base['__preactattr_'].ref, null);\n\n\t\tcomponent.nextBase = base;\n\n\t\tremoveNode(base);\n\t\trecyclerComponents.push(component);\n\n\t\tremoveChildren(base);\n\t}\n\n\tapplyRef(component.__ref, null);\n}\n\nfunction Component(props, context) {\n\tthis._dirty = true;\n\n\tthis.context = context;\n\n\tthis.props = props;\n\n\tthis.state = this.state || {};\n\n\tthis._renderCallbacks = [];\n}\n\nextend(Component.prototype, {\n\tsetState: function setState(state, callback) {\n\t\tif (!this.prevState) this.prevState = this.state;\n\t\tthis.state = extend(extend({}, this.state), typeof state === 'function' ? state(this.state, this.props) : state);\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t},\n\tforceUpdate: function forceUpdate(callback) {\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\trenderComponent(this, 2);\n\t},\n\trender: function render() {}\n});\n\nfunction render(vnode, parent, merge) {\n  return diff(merge, vnode, {}, false, parent, false);\n}\n\nfunction createRef() {\n\treturn {};\n}\n\nvar preact = {\n\th: h,\n\tcreateElement: h,\n\tcloneElement: cloneElement,\n\tcreateRef: createRef,\n\tComponent: Component,\n\trender: render,\n\trerender: rerender,\n\toptions: options\n};\n\nexport default preact;\nexport { h, h as createElement, cloneElement, createRef, Component, render, rerender, options };\n//# sourceMappingURL=preact.mjs.map\n","import Graph, { Edge, Node } from './classes/Graph'\r\nimport { maxHeaderSize } from 'http'\r\nimport { sumSqrt } from './layout/util'\r\n\r\nexport type ID = string | number\r\n\r\nexport function isID(id: any): id is ID {\r\n  return typeof id === 'string' || typeof id === 'number'\r\n}\r\n\r\nexport function isIDArray(ids: any): ids is ID[] {\r\n  if (!Array.isArray(ids)) {\r\n    return false\r\n  }\r\n  return ids.every(id => isID(id))\r\n}\r\n\r\nexport function isCanvas(el: any): el is HTMLCanvasElement {\r\n  return el instanceof HTMLCanvasElement\r\n}\r\n\r\nexport function resolveNestedProp(path: string | string[], object: any): any {\r\n  const properties = Array.isArray(path) ? path : path.split('.')\r\n  return properties.reduce((prev, curr) => prev && prev[curr], object)\r\n}\r\n\r\nexport function resolveNestedPropWithFallback(path: string, key: string, object: any): any {\r\n  let currPath = path\r\n  let res: any\r\n  while (currPath.indexOf('.') !== -1 && !res) {\r\n    res = resolveNestedProp(`${currPath}.${key}`, object)\r\n    currPath = currPath.substr(0, currPath.lastIndexOf('.'))\r\n  }\r\n  return res\r\n}\r\n\r\nexport function createNestedPath(path: string | string[], object: any): any {\r\n  const properties = Array.isArray(path) ? path : path.split('.')\r\n  return properties.reduce((prev, curr) => (prev[curr] = prev[curr] || {}), object)\r\n}\r\n\r\nexport class Vector {\r\n  public x: number\r\n  public y: number\r\n\r\n  constructor(x: number, y: number) {\r\n    this.x = x\r\n    this.y = y\r\n  }\r\n\r\n  public add(v2: Vector) {\r\n    this.x += v2.x\r\n    this.y += v2.y\r\n    return this\r\n  }\r\n\r\n  public multiply(c: number) {\r\n    this.x *= c\r\n    this.y *= c\r\n    return this\r\n  }\r\n\r\n  public subtract(v2: Vector) {\r\n    this.x -= v2.x\r\n    this.y -= v2.y\r\n    return this\r\n  }\r\n\r\n  public dist2() {\r\n    return this.x * this.x + this.y * this.y\r\n  }\r\n\r\n  public dist() {\r\n    return Math.sqrt(this.dist2())\r\n  }\r\n\r\n  public norm() {\r\n    return this.clone().multiply(1 / this.dist())\r\n  }\r\n\r\n  public clone() {\r\n    return new Vector(this.x, this.y)\r\n  }\r\n}\r\n\r\nexport class PriorityQueue<T> {\r\n  private top = 0\r\n\r\n  private parent(i: number) {\r\n    return ((i + 1) >>> 1) - 1\r\n  }\r\n  private left(i: number) {\r\n    return (i << 1) + 1\r\n  }\r\n\r\n  private right(i: number) {\r\n    return (i + 1) << 1\r\n  }\r\n\r\n  protected heap: T[] = []\r\n\r\n  protected comp: (a: T, b: T) => boolean\r\n\r\n  constructor(comp: (a: T, b: T) => boolean = (a: T, b: T) => a > b) {\r\n    this.comp = comp\r\n  }\r\n  size(): number {\r\n    return this.heap.length\r\n  }\r\n  isEmpty(): boolean {\r\n    return this.size() === 0\r\n  }\r\n  peek(): T {\r\n    return this.heap[this.top]\r\n  }\r\n  push(...values: T[]): number {\r\n    values.forEach(value => {\r\n      this.heap.push(value)\r\n      this.siftUp()\r\n    })\r\n    return this.size()\r\n  }\r\n  pop(): T {\r\n    const poppedValue = this.peek()\r\n    const bottom = this.size() - 1\r\n    if (bottom > this.top) {\r\n      this.swap(this.top, bottom)\r\n    }\r\n    this.heap.pop()\r\n    this.siftDown()\r\n    return poppedValue\r\n  }\r\n  replace(value: T): T {\r\n    const replacedValue = this.peek()\r\n    this.heap[this.top] = value\r\n    this.siftDown()\r\n    return replacedValue\r\n  }\r\n  private greater(i: number, j: number): boolean {\r\n    return this.comp(this.heap[i], this.heap[j])\r\n  }\r\n  private swap(i: number, j: number): void {\r\n    ;[this.heap[i], this.heap[j]] = [this.heap[j], this.heap[i]]\r\n  }\r\n  private siftUp(): void {\r\n    let node = this.size() - 1\r\n    while (node > this.top && this.greater(node, this.parent(node))) {\r\n      this.swap(node, this.parent(node))\r\n      node = this.parent(node)\r\n    }\r\n  }\r\n  private siftDown(): void {\r\n    let node = this.top\r\n    let left = this.left(node)\r\n    let right = this.right(node)\r\n    while (\r\n      (left < this.size() && this.greater(left, node)) ||\r\n      (right < this.size() && this.greater(right, node))\r\n    ) {\r\n      const maxChild = right < this.size() && this.greater(right, left) ? right : left\r\n      this.swap(node, maxChild)\r\n      node = maxChild\r\n      left = this.left(node)\r\n      right = this.right(node)\r\n    }\r\n  }\r\n}\r\n\r\nexport function getEdgeCrossings(graph: Graph): number {\r\n  const edges: Edge[] = graph.edges()\r\n\r\n  const onSegment = (p: Node, q: Node, r: Node): boolean => {\r\n    if (\r\n      q.x <= Math.max(p.x, r.x) &&\r\n      q.x >= Math.min(p.x, r.x) &&\r\n      q.y <= Math.max(p.y, r.y) &&\r\n      q.y >= Math.min(p.y, r.y)\r\n    ) {\r\n      return true\r\n    }\r\n    return false\r\n  }\r\n\r\n  const orientation = (p: Node, q: Node, r: Node): number => {\r\n    const val = (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y)\r\n    if (val === 0) return 0\r\n    return val > 0 ? 1 : 2\r\n  }\r\n\r\n  const doOverlap = (n1: Node, n2: Node): boolean => {\r\n    return n1.x === n2.x && n1.y === n2.y\r\n  }\r\n\r\n  const doIntercest = (n1: Node, n2: Node, n3: Node, n4: Node): boolean => {\r\n    // Ignore starting point overlaps\r\n    if (doOverlap(n1, n3) || doOverlap(n1, n4) || doOverlap(n2, n3) || doOverlap(n2, n4)) {\r\n      return false\r\n    }\r\n    const o1 = orientation(n1, n2, n3)\r\n    const o2 = orientation(n1, n2, n4)\r\n    const o3 = orientation(n3, n4, n1)\r\n    const o4 = orientation(n3, n4, n2)\r\n\r\n    if (o1 !== o2 && o3 !== o4) {\r\n      return true\r\n    }\r\n\r\n    if (o1 === 0 && onSegment(n1, n3, n2)) {\r\n      return true\r\n    }\r\n\r\n    if (o2 === 0 && onSegment(n1, n4, n2)) {\r\n      return true\r\n    }\r\n\r\n    if (o3 === 0 && onSegment(n3, n1, n4)) {\r\n      return true\r\n    }\r\n\r\n    if (o4 === 0 && onSegment(n3, n2, n4)) {\r\n      return true\r\n    }\r\n\r\n    return false\r\n  }\r\n  let crossings = 0\r\n  edges.forEach(e1 => {\r\n    edges.forEach(e2 => {\r\n      if (e1 === e2) return\r\n      crossings += doIntercest(e1.source, e1.target, e2.source, e2.target) ? 1 : 0\r\n    })\r\n  })\r\n  return crossings / 2\r\n}\r\n\r\nexport function calculateEdgeLengthStats(graph: Graph): { mean: number; stdev: number } {\r\n  const lengths = graph.edges().map(edge => {\r\n    const dx = edge.target.x - edge.source.x\r\n    const dy = edge.target.y - edge.source.y\r\n    return sumSqrt(dx, dy)\r\n  })\r\n\r\n  const sum = lengths.reduce((prev, l) => prev + l, 0)\r\n  const mean = sum / lengths.length\r\n\r\n  const sumSQ = lengths.reduce((prev, l) => prev + (l - mean) * (l - mean))\r\n  const stdev = Math.sqrt(sumSQ / lengths.length)\r\n\r\n  return {\r\n    mean,\r\n    stdev,\r\n  }\r\n}\r\n","import Settings from './Settings'\r\nimport Graphy from '../Graphy'\r\n\r\nexport interface IGraphyComponent {\r\n  readonly namespace: string\r\n  getOption: (key: string) => any\r\n  setOption: (key: string, value: any) => any\r\n}\r\n\r\nexport interface IOptions {\r\n  [key: string]: any\r\n}\r\n\r\nexport default abstract class GraphyComponent implements IGraphyComponent {\r\n  protected settings: Settings\r\n  protected options: Object\r\n  protected root: Graphy\r\n  abstract readonly namespace: string\r\n\r\n  public getOption: (key: string) => any\r\n  public setOption: (key: string, value: any) => any\r\n\r\n  constructor(root: Graphy, options: Object) {\r\n    this.root = root\r\n    this.settings = root.settings\r\n    this.options = options\r\n  }\r\n\r\n  protected init(namespace: string, options?: IOptions) {\r\n    this.initSettings(namespace)\r\n    this.setOption('type', this)\r\n    this.initComponent(options)\r\n  }\r\n\r\n  protected initSettings(namespace: string) {\r\n    this.getOption = this.settings.namespacedGetter(namespace)\r\n    this.setOption = this.settings.namespacedSetter(namespace)\r\n  }\r\n\r\n  protected abstract initComponent(options: IOptions): void\r\n}\r\n","import { ID, isID, isIDArray, Vector, PriorityQueue } from '../util'\r\nimport GraphyComponent, { IOptions } from './Abstract'\r\nimport Settings from './Settings'\r\nimport Graphy from '../Graphy'\r\nimport { INodeCamProps } from './Camera'\r\nimport { ILayoutProps } from './ILayoutProps'\r\nimport nanoid from 'nanoid'\r\n\r\nexport interface ArbitraryData {\r\n  [key: string]: any\r\n}\r\n\r\nexport interface DataObject {\r\n  id: ID\r\n  data?: ArbitraryData\r\n  color?: string\r\n  x?: number\r\n  y?: number\r\n  size?: number\r\n  type?: string\r\n}\r\n\r\nexport interface Node extends DataObject {\r\n  camProps?: INodeCamProps\r\n  layoutProps?: ILayoutProps\r\n}\r\nexport interface Edge extends DataObject {\r\n  source: Node\r\n  target: Node\r\n}\r\n\r\ninterface AdjacencyList {\r\n  [sourceId: string]: {\r\n    [targetId: string]: {\r\n      [edgeId: string]: Edge\r\n    }\r\n  }\r\n}\r\n\r\nexport default class Graph extends GraphyComponent {\r\n  private nodesArray: Node[] = []\r\n  private edgesArray: Edge[] = []\r\n\r\n  public readonly namespace = 'graphy.graph'\r\n\r\n  constructor(root: Graphy, options?: IOptions) {\r\n    super(root, options)\r\n    this.init(this.namespace)\r\n    if (options) {\r\n      this.parseGraph(options)\r\n    }\r\n  }\r\n\r\n  protected initComponent() {}\r\n\r\n  /**\r\n   * Node and edge indexes by id\r\n   */\r\n  private nodesIndex = {}\r\n  private edgesIndex = {}\r\n\r\n  /**\r\n   * Edge indexes by node\r\n   */\r\n  private adjacencyListIn: AdjacencyList = {}\r\n  private adjacencyListOut: AdjacencyList = {}\r\n  private adjacencyListAll: AdjacencyList = {}\r\n\r\n  public addNode(node: Node): Graph {\r\n    if (this.nodesIndex[node.id]) {\r\n      throw `Node with id ${node.id} already exists`\r\n    }\r\n    if (node.data && typeof node.data.x === 'number') {\r\n      node.x = node.data.x\r\n    }\r\n    if (node.data && typeof node.data.y === 'number') {\r\n      node.y = node.data.y\r\n    }\r\n    if (!node.x) node.x = Math.random() * 500\r\n    if (!node.y) node.y = Math.random() * 500\r\n\r\n    this.adjacencyListIn[node.id] = {}\r\n    this.adjacencyListOut[node.id] = {}\r\n    this.adjacencyListAll[node.id] = {}\r\n\r\n    this.nodesArray.push(node)\r\n    this.nodesIndex[node.id] = node\r\n\r\n    this.root.events.dispatch('addNode', node)\r\n\r\n    return this\r\n  }\r\n\r\n  public parseGraph(graph: { nodes?: Node[]; edges?: Edge[] }) {\r\n    if (graph.nodes) {\r\n      graph.nodes.forEach(node => {\r\n        this.addNode(node)\r\n      })\r\n    }\r\n    if (graph.edges) {\r\n      graph.edges.forEach(edge => {\r\n        this.addEdge(edge)\r\n      })\r\n    }\r\n  }\r\n\r\n  public clear(): void {\r\n    this.nodesArray.length = 0\r\n    this.edgesArray.length = 0\r\n    this._clearObj(this.nodesIndex)\r\n    this._clearObj(this.edgesIndex)\r\n    this._clearObj(this.adjacencyListIn)\r\n    this._clearObj(this.adjacencyListOut)\r\n    this._clearObj(this.adjacencyListAll)\r\n  }\r\n\r\n  private _clearObj(obj: any): void {\r\n    for (const prop of Object.keys(obj)) {\r\n      delete obj[prop]\r\n    }\r\n  }\r\n\r\n  public dropNode(id: ID): Graph {\r\n    if (!this.nodesIndex[id]) {\r\n      throw `Node with id ${id} doesn't exist`\r\n    }\r\n\r\n    delete this.nodesIndex[id]\r\n    this.nodesArray = this.nodesArray.filter(node => node.id !== id)\r\n\r\n    this.edgesArray.forEach(edge => {\r\n      if (edge.source.id === id || edge.target.id === id) {\r\n        this.dropEdge(edge.id)\r\n      }\r\n    })\r\n\r\n    delete this.adjacencyListIn[id]\r\n    delete this.adjacencyListOut[id]\r\n    delete this.adjacencyListAll[id]\r\n\r\n    for (const i in this.nodesIndex) {\r\n      delete this.adjacencyListIn[i][id]\r\n      delete this.adjacencyListOut[i][id]\r\n      delete this.adjacencyListAll[i][id]\r\n    }\r\n\r\n    this.root.events.dispatch('removeNode', id)\r\n\r\n    return this\r\n  }\r\n\r\n  public addEdge(edge: Edge): Graph {\r\n    if (this.edgesIndex[edge.id]) {\r\n      throw `Edge with id ${edge.id} already exists`\r\n    }\r\n    if (typeof edge.source === 'string') {\r\n      edge.source = this.nodesIndex[edge.source]\r\n    }\r\n    if (typeof edge.target === 'string') {\r\n      edge.target = this.nodesIndex[edge.target]\r\n    }\r\n    if (edge.id === undefined) {\r\n      edge.id = nanoid()\r\n    }\r\n\r\n    this.edgesArray.push(edge)\r\n    this.edgesIndex[edge.id] = edge\r\n\r\n    if (!this.adjacencyListIn[edge.target.id][edge.source.id]) {\r\n      this.adjacencyListIn[edge.target.id][edge.source.id] = {}\r\n    }\r\n    if (!this.adjacencyListOut[edge.source.id][edge.target.id]) {\r\n      this.adjacencyListOut[edge.source.id][edge.target.id] = {}\r\n    }\r\n    if (!this.adjacencyListAll[edge.source.id][edge.target.id]) {\r\n      this.adjacencyListAll[edge.source.id][edge.target.id] = {}\r\n    }\r\n    if (!this.adjacencyListAll[edge.target.id][edge.source.id]) {\r\n      this.adjacencyListAll[edge.target.id][edge.source.id] = {}\r\n    }\r\n\r\n    this.adjacencyListIn[edge.target.id][edge.source.id][edge.id] = edge\r\n    this.adjacencyListOut[edge.source.id][edge.target.id][edge.id] = edge\r\n    this.adjacencyListAll[edge.target.id][edge.source.id][edge.id] = edge\r\n    this.adjacencyListAll[edge.source.id][edge.target.id][edge.id] = edge\r\n\r\n    this.root.events.dispatch('addEdge', edge)\r\n    return this\r\n  }\r\n\r\n  public dropEdge(id: ID): Graph {\r\n    if (!this.edgesIndex[id]) {\r\n      throw `Edge with id ${id} doesn't exist`\r\n    }\r\n\r\n    const tmpEdge = this.edgesIndex[id]\r\n    delete this.edgesIndex[id]\r\n    this.edgesArray = this.edgesArray.filter(edge => edge.id !== id)\r\n\r\n    delete this.adjacencyListIn[tmpEdge.target.id][tmpEdge.source.id][tmpEdge.id]\r\n    if (Object.keys(this.adjacencyListIn[tmpEdge.target.id][tmpEdge.source.id]).length) {\r\n      delete this.adjacencyListIn[tmpEdge.target.id][tmpEdge.source.id]\r\n    }\r\n\r\n    delete this.adjacencyListOut[tmpEdge.source.id][tmpEdge.target.id][tmpEdge.id]\r\n    if (Object.keys(this.adjacencyListIn[tmpEdge.source.id][tmpEdge.target.id]).length) {\r\n      delete this.adjacencyListIn[tmpEdge.source.id][tmpEdge.target.id]\r\n    }\r\n\r\n    delete this.adjacencyListAll[tmpEdge.target.id][tmpEdge.source.id][tmpEdge.id]\r\n    if (Object.keys(this.adjacencyListAll[tmpEdge.target.id][tmpEdge.source.id]).length) {\r\n      delete this.adjacencyListAll[tmpEdge.target.id][tmpEdge.source.id]\r\n    }\r\n\r\n    if (tmpEdge.source !== tmpEdge.target) {\r\n      delete this.adjacencyListAll[tmpEdge.source.id][tmpEdge.target.id][tmpEdge.id]\r\n      if (Object.keys(this.adjacencyListAll[tmpEdge.source.id][tmpEdge.target.id]).length) {\r\n        delete this.adjacencyListAll[tmpEdge.source.id][tmpEdge.target.id]\r\n      }\r\n    }\r\n    this.root.events.dispatch('removeEdge', tmpEdge)\r\n\r\n    return this\r\n  }\r\n\r\n  public get nodesCount(): number {\r\n    return this.nodesArray.length\r\n  }\r\n\r\n  public get edgesCount(): number {\r\n    return this.edgesArray.length\r\n  }\r\n\r\n  public nodes(ids?: ID | ID[]): Node[] {\r\n    if (!ids) {\r\n      return this.nodesArray\r\n    }\r\n\r\n    if (isID(ids)) {\r\n      return this.nodesIndex[ids]\r\n    }\r\n\r\n    if (isIDArray(ids)) {\r\n      return ids.map(id => this.nodesIndex[id])\r\n    }\r\n\r\n    throw 'nodes: Wrong arguments.'\r\n  }\r\n\r\n  public edges(ids?: ID | ID[]): Edge[] {\r\n    if (!ids) {\r\n      return this.edgesArray\r\n    }\r\n\r\n    if (isID(ids)) {\r\n      return this.edgesIndex[ids]\r\n    }\r\n\r\n    if (isIDArray(ids)) {\r\n      return ids.map(id => this.edgesIndex[id])\r\n    }\r\n\r\n    throw 'edges: Wrong arguments.'\r\n  }\r\n\r\n  public getDegree(node: Node) {\r\n    return Object.keys(this.adjacencyListAll[node.id]).length\r\n  }\r\n\r\n  public calcPaths(): Node[] {\r\n    const nodes = this.nodesArray\r\n    // Initiallize distance\r\n    nodes.forEach(n1 => {\r\n      n1.layoutProps.dist = {}\r\n      nodes.forEach(n2 => {\r\n        n1.layoutProps.dist[n2.id] = Infinity\r\n      })\r\n    })\r\n\r\n    nodes.forEach(start => {\r\n      const dist = start.layoutProps.dist\r\n      dist[start.id] = 0\r\n      const queue: Node[] = []\r\n      // const queue = new PriorityQueue<Node>((n1, n2) => {\r\n      //   return dist[n1.id] < dist[n2.id]\r\n      // })\r\n      nodes.forEach(node => {\r\n        queue.push(node)\r\n      })\r\n      while (queue.length > 0) {\r\n        let currentLength = Infinity\r\n        let current = null\r\n        let currentIndex = -1\r\n        queue.forEach((n, index) => {\r\n          if (dist[n.id] < currentLength) {\r\n            currentIndex = index\r\n          }\r\n        })\r\n        ;[queue[currentIndex], queue[queue.length - 1]] = [\r\n          queue[queue.length - 1],\r\n          queue[currentIndex],\r\n        ]\r\n        current = queue.pop()\r\n        currentLength = dist[current.id]\r\n        const adj = Object.keys(this.adjacencyListAll[current.id])\r\n        adj.forEach(n => {\r\n          if (dist[current.id] + 1 < dist[n]) {\r\n            dist[n] = dist[current.id] + 1\r\n          }\r\n        })\r\n      }\r\n      nodes.forEach(n => {\r\n        if (dist[n.id] === Infinity) debugger\r\n      })\r\n    })\r\n    return nodes\r\n  }\r\n}\r\n","import { resolveNestedPropWithFallback, createNestedPath } from '../util'\r\n\r\ninterface SettingsData {\r\n  default: Object\r\n  [key: string]: any\r\n}\r\n\r\nexport default class Settings {\r\n  private data: SettingsData = {\r\n    default: {\r\n      defaultNodeSize: 10,\r\n      defaultEdgeWidth: 2,\r\n      defaultEdgeColor: '#7777',\r\n      defaultNodeColor: '#000',\r\n    },\r\n  }\r\n\r\n  constructor() {\r\n    this.get = this.get.bind(this)\r\n    this.set = this.set.bind(this)\r\n  }\r\n\r\n  public get(key: string, namespace?: string): any {\r\n    if (namespace) {\r\n      return resolveNestedPropWithFallback(namespace, key, this.data) || this.data.default[key]\r\n    }\r\n    return this.data[key]\r\n  }\r\n\r\n  public set(key: string, value: any, namespace?: string) {\r\n    if (namespace) {\r\n      createNestedPath(namespace, this.data)[key] = value\r\n      return\r\n    }\r\n    this.data[key] = value\r\n  }\r\n\r\n  public namespacedGetter(namespace: string): any {\r\n    return (key: string) => this.get(key, namespace)\r\n  }\r\n\r\n  public namespacedSetter(namespace: string): any {\r\n    return (key: string, value: any) => {\r\n      this.set(key, value, namespace)\r\n    }\r\n  }\r\n}\r\n","import GraphyComponent, { IOptions } from './Abstract'\r\nimport Settings from './Settings'\r\nimport Graph from './Graph'\r\nimport Graphy from '../Graphy'\r\n\r\nexport default abstract class Renderer extends GraphyComponent {\r\n  public readonly namespace: string = 'graphy.renderer'\r\n  protected graph: Graph\r\n\r\n  constructor(root: Graphy, options: IOptions, graph: Graph) {\r\n    super(root, options)\r\n    this.graph = graph\r\n  }\r\n\r\n  protected initComponent() {}\r\n\r\n  public abstract render(options?: IOptions): Renderer\r\n}\r\n","import { Node } from '../../classes/Graph'\r\n\r\nexport interface ICanvasNodeRenderer {\r\n  render(node: Node, context: CanvasRenderingContext2D, getter: (key: string) => any): void\r\n}\r\n\r\nexport default class CanvasNodes implements ICanvasNodeRenderer {\r\n  render(node: Node, context: CanvasRenderingContext2D, getter: (key: string) => any): void {\r\n    context.save()\r\n    if (node.camProps.hover) {\r\n      context.fillStyle = '#f00'\r\n    } else {\r\n      context.fillStyle = node.color || getter('defaultNodeColor')\r\n    }\r\n    context.beginPath()\r\n    context.arc(node.camProps.x, node.camProps.y, node.camProps.size, 0, Math.PI * 2)\r\n    context.closePath()\r\n    context.fill()\r\n    context.restore()\r\n    // TODO: Calculate bounding box\r\n  }\r\n}\r\n","import { Edge } from '../../classes/Graph'\r\n\r\nexport interface ICanvasEdgeRenderer {\r\n  render(edge: Edge, context: CanvasRenderingContext2D, getter: (key: string) => any): void\r\n}\r\n\r\nexport default class CanvasEdges implements ICanvasEdgeRenderer {\r\n  render(edge: Edge, context: CanvasRenderingContext2D, getter: (key: string) => any): void {\r\n    context.save()\r\n    context.strokeStyle = edge.color || getter('defaultEdgeColor')\r\n    // TODO: Get width from edge/camera\r\n    context.lineWidth = getter('defaultEdgeWidth')\r\n    context.beginPath()\r\n    context.moveTo(edge.source.camProps.x, edge.source.camProps.y)\r\n    context.lineTo(edge.target.camProps.x, edge.target.camProps.y)\r\n    context.stroke()\r\n    context.restore()\r\n  }\r\n}\r\n","import Settings from '../classes/Settings'\r\nimport Graph, { Node, Edge } from '../classes/Graph'\r\nimport Renderer from '../classes/Renderer'\r\nimport Graphy from '../Graphy'\r\nimport { isCanvas, ID } from '../util'\r\nimport CanvasNodes, { ICanvasNodeRenderer } from './Canvas/CanvasNodes'\r\nimport { IOptions } from '../classes/Abstract'\r\nimport CanvasEdges, { ICanvasEdgeRenderer } from './Canvas/CanvasEdges'\r\n\r\nexport interface IContexts {\r\n  [key: string]: CanvasRenderingContext2D\r\n}\r\n\r\nexport interface ICanvasNodeRenderers {\r\n  [type: string]: ICanvasNodeRenderer\r\n}\r\n\r\nexport interface ICanvasEdgeRenderers {\r\n  [type: string]: ICanvasEdgeRenderer\r\n}\r\n\r\nexport interface ICanvasRendererOptions {\r\n  container: HTMLElement\r\n}\r\n\r\nexport default class CanvasRenderer extends Renderer {\r\n  public readonly namespace: string = 'graphy.renderer.canvas'\r\n\r\n  protected queuedRender = false\r\n\r\n  protected container: HTMLElement\r\n  protected domElements: HTMLElement[] = []\r\n  protected contexts: IContexts = {}\r\n\r\n  protected nodeRenderers: ICanvasNodeRenderers = {}\r\n  protected edgeRenderers: ICanvasEdgeRenderers = {}\r\n\r\n  protected width: number\r\n  protected height: number\r\n\r\n  protected shouldAddEdge: boolean = false\r\n  protected addingEdge: {\r\n    source: Node | null\r\n    target: Node | null\r\n  } = {\r\n    source: null,\r\n    target: null,\r\n  }\r\n  protected tmpEdge: Edge | null = null\r\n\r\n  constructor(root: Graphy, options: ICanvasRendererOptions, graph: Graph) {\r\n    super(root, options, graph)\r\n    this.init(this.namespace, options)\r\n  }\r\n\r\n  protected initComponent(options?: IOptions) {\r\n    if (!options || !(options.container instanceof HTMLElement)) {\r\n      throw 'Container not found.'\r\n    }\r\n    this.render = this.render.bind(this)\r\n    this.queueRender = this.queueRender.bind(this)\r\n    this.root.events.subscribe('render', this.queueRender)\r\n    this.container = options.container\r\n    this.initDOM('canvas', 'scene')\r\n    this.contexts.edges = this.contexts.scene\r\n    this.contexts.nodes = this.contexts.scene\r\n    this.contexts.labels = this.contexts.scene\r\n\r\n    // Register default renderers\r\n    this.registerNodeRenderer('default', new CanvasNodes())\r\n    this.registerEdgeRenderer('default', new CanvasEdges())\r\n\r\n    // TODO: Implement mouse canvas\r\n    this.addEventListeners()\r\n\r\n    this.resize()\r\n  }\r\n\r\n  protected initDOM(tag: string, id: string) {\r\n    const el = document.createElement(tag)\r\n    el.style.position = 'absolute'\r\n    el.className = 'graphy-' + id\r\n    this.container.appendChild(el)\r\n    this.domElements.push(el)\r\n    if (isCanvas(el)) {\r\n      this.contexts[id] = el.getContext('2d')\r\n    }\r\n  }\r\n\r\n  private queueRender() {\r\n    if (!this.queuedRender) {\r\n      this.queuedRender = true\r\n      requestAnimationFrame(this.render)\r\n    }\r\n  }\r\n\r\n  private addEventListeners() {\r\n    this.container.addEventListener('resize', () => {\r\n      this.resize()\r\n    })\r\n    this.domElements.forEach(el => {\r\n      if (isCanvas(el)) {\r\n        let hoverNodes: Node[] = []\r\n        const handleMove = event => {\r\n          const newHoverNodes = this.graph.nodes().filter(node => {\r\n            const dX = node.camProps.x - event.clientX\r\n            const dY = node.camProps.y - event.clientY\r\n            const size = node.camProps.size\r\n            return dX * dX + dY * dY < size * size\r\n          })\r\n          newHoverNodes.forEach(node => {\r\n            node.camProps.hover = true\r\n            this.root.events.dispatch('hoverNode', node)\r\n          })\r\n          hoverNodes\r\n            .filter(node => newHoverNodes.indexOf(node) === -1)\r\n            .forEach(node => {\r\n              node.camProps.hover = false\r\n              this.root.events.dispatch('hoverNodeEnd', node)\r\n            })\r\n          hoverNodes = newHoverNodes\r\n          if (this.addingEdge.source !== null && this.addingEdge.target === null) {\r\n            this.tmpEdge = {\r\n              id: 'tmpNodeID',\r\n              source: this.addingEdge.source,\r\n              target: {\r\n                id: 'tmpEdgeID',\r\n                camProps: {\r\n                  x: event.clientX,\r\n                  y: event.clientY,\r\n                  size: 10,\r\n                },\r\n              },\r\n            }\r\n            this.root.events.dispatch('render', null)\r\n            // this.edgeRenderers.default.render(edge, this.contexts.edges, this.getOption)\r\n          } else {\r\n            this.tmpEdge = null\r\n          }\r\n        }\r\n        // const handleMove = event => {\r\n        //   if (this.addingEdge.source === null || this.addingEdge.target === null) {\r\n        //     const newHoverNodes = this.graph.nodes().filter(node => {\r\n        //       const dX = node.camProps.x - event.clientX\r\n        //       const dY = node.camProps.y - event.clientY\r\n        //       const size = node.camProps.size\r\n        //       return dX * dX + dY * dY < size * size\r\n        //     })\r\n        //   }\r\n        // }\r\n        el.addEventListener('click', event => {\r\n          if (hoverNodes.length) {\r\n            this.root.events.dispatch('nodeClick', hoverNodes[0])\r\n            if (this.shouldAddEdge && this.addingEdge.source === null) {\r\n              this.addingEdge.source = hoverNodes[0]\r\n            } else if (this.shouldAddEdge && this.addingEdge.source !== null) {\r\n              this.addingEdge.target = hoverNodes[0]\r\n              this.root.graph.addEdge({\r\n                ...this.addingEdge,\r\n                id: 'generated' + Math.floor(Math.random() * 1000),\r\n              })\r\n              this.shouldAddEdge = false\r\n            }\r\n          } else {\r\n            this.root.events.dispatch('nodeClick', null)\r\n          }\r\n        })\r\n        el.addEventListener('wheel', event => {\r\n          event.preventDefault()\r\n          this.root.events.dispatch('scroll', event)\r\n        })\r\n        el.addEventListener('mousedown', event => {\r\n          // TODO: Recognize hovered nodes\r\n          this.root.events.dispatch('dragStart', event)\r\n        })\r\n        el.addEventListener('touchstart', event => {\r\n          console.log(event)\r\n          // TODO: Recognize hovered nodes\r\n          if (event.touches.length === 1) {\r\n            event.preventDefault()\r\n            this.root.events.dispatch('dragStart', event.touches[0])\r\n          }\r\n        })\r\n        el.addEventListener('mousemove', event => {\r\n          handleMove(event)\r\n          this.root.events.dispatch('drag', event)\r\n        })\r\n        el.addEventListener('touchmove', event => {\r\n          if (event.touches.length === 1) {\r\n            event.preventDefault()\r\n            handleMove(event)\r\n            this.root.events.dispatch('drag', event.touches[0])\r\n          }\r\n        })\r\n        el.addEventListener('mouseup', event => {\r\n          this.root.events.dispatch('dragEnd', event)\r\n        })\r\n        el.addEventListener('touchend', event => {\r\n          if (event.touches.length === 1) {\r\n            event.preventDefault()\r\n            this.root.events.dispatch('dragEnd', event.touches[0])\r\n          }\r\n        })\r\n      }\r\n    })\r\n    this.root.events.subscribe('startEdgeAdd', () => {\r\n      this.addingEdge = {\r\n        source: null,\r\n        target: null,\r\n      }\r\n      this.shouldAddEdge = true\r\n    })\r\n  }\r\n\r\n  public resize(w?: number, h?: number) {\r\n    const oldWidth = this.width\r\n    const oldHeigth = this.height\r\n    if (w !== undefined && h !== undefined) {\r\n      this.width = w\r\n      this.height = h\r\n    } else {\r\n      this.width = this.container.offsetWidth\r\n      this.height = this.container.offsetHeight\r\n    }\r\n\r\n    if (oldWidth !== this.width || oldHeigth !== this.height) {\r\n      this.domElements.forEach(el => {\r\n        el.style.width = this.width + 'px'\r\n        el.style.width = this.width + 'px'\r\n        if (isCanvas(el)) {\r\n          el.width = this.width\r\n          el.height = this.height\r\n        }\r\n        console.log('resized', this.width, this.height)\r\n      })\r\n    }\r\n  }\r\n\r\n  public render(options: Object = {}) {\r\n    const graph = this.graph\r\n    const nodes = this.root.camera.getNodeCoords(graph.nodes())\r\n    const edges = graph.edges()\r\n\r\n    this.resize()\r\n\r\n    this.clear()\r\n\r\n    Object.values(edges).forEach(edge => {\r\n      if (edge.type && this.edgeRenderers[edge.type]) {\r\n        this.edgeRenderers[edge.type].render(edge, this.contexts.edges, this.getOption)\r\n      } else {\r\n        this.edgeRenderers.default.render(edge, this.contexts.edges, this.getOption)\r\n      }\r\n    })\r\n    if (this.tmpEdge) {\r\n      const edge = this.tmpEdge\r\n      if (edge.type && this.edgeRenderers[edge.type]) {\r\n        this.edgeRenderers[edge.type].render(edge, this.contexts.edges, this.getOption)\r\n      } else {\r\n        this.edgeRenderers.default.render(edge, this.contexts.edges, this.getOption)\r\n      }\r\n    }\r\n\r\n    // if (drawNodes) {\r\n    Object.values(nodes).forEach(node => {\r\n      if (node.type && this.nodeRenderers[node.type]) {\r\n        this.nodeRenderers[node.type].render(node, this.contexts.nodes, this.getOption)\r\n      } else {\r\n        this.nodeRenderers.default.render(node, this.contexts.nodes, this.getOption)\r\n      }\r\n    })\r\n    // }\r\n\r\n    this.queuedRender = false\r\n\r\n    return this\r\n  }\r\n\r\n  protected clear() {\r\n    Object.values(this.contexts).forEach(c => {\r\n      c.clearRect(0, 0, this.width, this.height)\r\n    })\r\n  }\r\n\r\n  public registerNodeRenderer(name: string, renderer: ICanvasNodeRenderer) {\r\n    // TODO: Make async loading?\r\n    this.nodeRenderers[name] = renderer\r\n  }\r\n\r\n  public registerEdgeRenderer(name: string, renderer: ICanvasEdgeRenderer) {\r\n    // TODO: Make async loading?\r\n    this.edgeRenderers[name] = renderer\r\n  }\r\n}\r\n","import { Node } from './Graph'\r\nimport GraphyComponent from './Abstract'\r\nimport Graphy from '../Graphy'\r\n\r\ninterface ICameraCoords {\r\n  x: number\r\n  y: number\r\n  zoom?: number\r\n}\r\n\r\nexport interface INodeCamProps {\r\n  x: number\r\n  y: number\r\n  size: number\r\n  hover?: boolean\r\n}\r\n\r\nexport interface ICameraOptions {\r\n  x?: number\r\n  y?: number\r\n  zoom?: number\r\n}\r\n\r\nexport default class Camera extends GraphyComponent {\r\n  public x: number = 0\r\n  public y: number = 0\r\n  public zoom: number = 1\r\n\r\n  public readonly namespace = 'graphy.camera'\r\n\r\n  private dragStart: {\r\n    x: number\r\n    y: number,\r\n  }\r\n  private hoverNode: {}\r\n\r\n  constructor(root: Graphy, options?: ICameraOptions) {\r\n    super(root, options)\r\n    this.init(this.namespace, options)\r\n  }\r\n\r\n  public initComponent() {\r\n    this.root.events.subscribe('scroll', (event: WheelEvent) => {\r\n      if (event.clientX) {\r\n        this.x -= event.clientX / this.zoom\r\n        this.y -= event.clientY / this.zoom\r\n      }\r\n      this.zoom -= event.deltaY / 1000\r\n      this.zoom = Math.max(this.zoom, 0.1)\r\n      if (event.clientX) {\r\n        this.x += event.clientX / this.zoom\r\n        this.y += event.clientY / this.zoom\r\n      }\r\n      this.root.events.dispatch('zoomChanged', this.zoom)\r\n      this.root.events.dispatch('render', null)\r\n    })\r\n\r\n    this.root.events.subscribe('dragStart', (event: MouseEvent) => {\r\n      this.dragStart = {\r\n        x: event.clientX,\r\n        y: event.clientY,\r\n      }\r\n    })\r\n    this.root.events.subscribe('drag', (event: MouseEvent) => {\r\n      if (this.dragStart) {\r\n        this.x += (event.clientX - this.dragStart.x) / this.zoom\r\n        this.y += (event.clientY - this.dragStart.y) / this.zoom\r\n        this.dragStart = {\r\n          x: event.clientX,\r\n          y: event.clientY,\r\n        }\r\n        this.root.events.dispatch('render', null)\r\n      }\r\n    })\r\n    this.root.events.subscribe('dragEnd', (event: MouseEvent) => {\r\n      this.dragStart = null\r\n    })\r\n    this.root.events.subscribe('hoverNode', (node: Node) => {\r\n      this.root.events.dispatch('render', null)\r\n    })\r\n    this.root.events.subscribe('hoverNodeEnd', (node: Node) => {\r\n      this.root.events.dispatch('render', null)\r\n    })\r\n  }\r\n\r\n  public goTo(coords: ICameraCoords) {\r\n    this.x = coords.x\r\n    this.y = coords.y\r\n    if (coords.zoom) {\r\n      this.zoom = coords.zoom\r\n    }\r\n  }\r\n\r\n  public coordsFromScreen(x: number, y: number): { x: number; y: number } {\r\n    return {\r\n      x: x / this.zoom + this.x,\r\n      y: y / this.zoom + this.y,\r\n    }\r\n  }\r\n\r\n  public getNodeCoords(nodes: Node[]): Node[] {\r\n    return nodes.map(node => {\r\n      if (!node.camProps) {\r\n        node.camProps = { x: 0, y: 0, size: 0 }\r\n      }\r\n      node.camProps.x = (node.x + this.x) * this.zoom\r\n      node.camProps.y = (node.y + this.y) * this.zoom\r\n      node.camProps.size = (node.size || this.getOption('defaultNodeSize')) * this.zoom\r\n      return node\r\n    })\r\n  }\r\n}\r\n","import Graphy from './Graphy'\r\n\r\nexport const graphy = new Graphy({})\r\n","import Graph, { Node, Edge } from './classes/Graph'\r\nimport GraphyComponent, { IGraphyComponent } from './classes/Abstract'\r\nimport Settings from './classes/Settings'\r\nimport Renderer from './classes/Renderer'\r\nimport CanvasRenderer, { ICanvasRendererOptions } from './renderer/Canvas'\r\nimport Events from './classes/Events'\r\nimport Camera, { ICameraOptions } from './classes/Camera'\r\n\r\nexport interface IGraphyOptions {\r\n  renderer?: ICanvasRendererOptions\r\n  graph?: {\r\n    nodes: Node[]\r\n    edges: Edge[]\r\n  }\r\n  camera?: ICameraOptions\r\n}\r\nexport default class Graphy implements IGraphyComponent {\r\n  public readonly namespace: string = 'graphy'\r\n  public settings: Settings\r\n  public events: Events\r\n  public graph: Graph\r\n  public renderer: Renderer\r\n  public camera: Camera\r\n\r\n  public getOption: (key: string) => any\r\n  public setOption: (key: string, value: any) => any\r\n\r\n  constructor(options: IGraphyOptions) {\r\n    this.settings = new Settings()\r\n    this.initOptions(this.namespace)\r\n    this.events = new Events()\r\n    // TODO: Separate passed options\r\n    this.camera = new Camera(this, options.camera)\r\n    this.graph = new Graph(this, options.graph)\r\n    if (options.renderer) {\r\n      this.renderer = new CanvasRenderer(this, options.renderer, this.graph)\r\n      this.renderer.render()\r\n    }\r\n  }\r\n\r\n  private initOptions(namespace: string) {\r\n    this.getOption = this.settings.namespacedGetter(namespace)\r\n    this.setOption = this.settings.namespacedSetter(namespace)\r\n  }\r\n\r\n  protected initComponent() {}\r\n}\r\n","import { h, Component } from 'preact'\r\nimport * as style from './style.scss'\r\nimport { graphy } from '../../Graphy/Instance'\r\nimport { Edge, Node } from '../../Graphy/classes/Graph'\r\nimport ForceDirected from '../../Graphy/layout/ForceDirected'\r\nimport CanvasRenderer from '../../Graphy/renderer/Canvas'\r\n\r\ninterface CanvasProps {}\r\n\r\ninterface CanvasState {\r\n  sigma: any\r\n}\r\n\r\nclass Canvas extends Component<CanvasProps, CanvasState> {\r\n  state: CanvasState = {\r\n    sigma: null,\r\n  }\r\n  container: HTMLElement\r\n  render() {\r\n    return (\r\n      <div\r\n        ref={container => (this.container = container)}\r\n        class={`${style.container}`}\r\n        id=\"main-container\"\r\n      />\r\n    )\r\n  }\r\n\r\n  componentDidMount(): void {\r\n    const g = {\r\n      nodes: [],\r\n      edges: [],\r\n    }\r\n    let edgeCount: number = 0\r\n    for (let i = 0; i < 10; i += 1) {\r\n      g.nodes.push({\r\n        id: 'n' + i,\r\n        x: Math.random() * 1000,\r\n        y: Math.random() * 800,\r\n        color: '#666',\r\n      })\r\n      for (let j = 0; j < Math.ceil(Math.random() * 2); j += 1) {\r\n        g.edges.push({\r\n          id: 'e' + edgeCount,\r\n          source: 'n' + i,\r\n          target: 'n' + ((Math.random() * i) | 0),\r\n          color: '#666',\r\n        })\r\n        edgeCount += 1\r\n      }\r\n    }\r\n    graphy.graph.clear()\r\n    graphy.graph.parseGraph(g)\r\n    graphy.renderer = new CanvasRenderer(graphy, { container: this.container }, graphy.graph)\r\n    graphy.events.dispatch('render', null)\r\n  }\r\n}\r\n\r\nexport default Canvas\r\n","import { h, Component, ComponentChild, ComponentChildren } from 'preact'\r\nimport { transitionHeight } from '../../../lib/util'\r\n\r\nimport * as style from './style.scss'\r\n\r\ninterface Props {\r\n  children: ComponentChildren\r\n}\r\n\r\ninterface State {\r\n  outgoingChildren: ComponentChild[]\r\n}\r\n\r\nexport default class Expander extends Component<Props, State> {\r\n  state: State = {\r\n    outgoingChildren: [],\r\n  }\r\n\r\n  private lastElHeight = 0\r\n\r\n  componentWillReceiveProps(nextProps: Props) {\r\n    const children = this.props.children as ComponentChild[]\r\n    const nextChildren = nextProps.children as ComponentChild[]\r\n\r\n    if (!nextChildren[0] && children[0]) {\r\n      this.setState({ outgoingChildren: children })\r\n    }\r\n  }\r\n\r\n  componentWillUpdate(nextProps: Props) {\r\n    const children = this.props.children as ComponentChild[]\r\n    const nextChildren = nextProps.children as ComponentChild[]\r\n\r\n    if ((children[0] && nextChildren[0]) || (!children[0] && !nextChildren[0])) return\r\n    this.lastElHeight = this.base!.getBoundingClientRect().height\r\n  }\r\n\r\n  async componentDidUpdate(previousProps: Props) {\r\n    const children = this.props.children as ComponentChild[]\r\n    const prevChildren = previousProps.children as ComponentChild[]\r\n\r\n    if ((children[0] && prevChildren[0]) || (!children[0] && !prevChildren[0])) return\r\n\r\n    this.base!.style.height = ''\r\n    this.base!.style.overflow = 'hidden'\r\n    const newHeight = children[0] ? this.base!.getBoundingClientRect().height : 0\r\n\r\n    await transitionHeight(this.base!, {\r\n      duration: 300,\r\n      from: this.lastElHeight,\r\n      to: newHeight,\r\n    })\r\n\r\n    // Unset the height & overflow, so element changes do the right thing.\r\n    this.base!.style.height = ''\r\n    this.base!.style.overflow = ''\r\n    if (this.state.outgoingChildren[0]) this.setState({ outgoingChildren: [] })\r\n  }\r\n\r\n  render(props: Props, { outgoingChildren }: State) {\r\n    const children = props.children as ComponentChild[]\r\n    const childrenExiting = !children[0] && outgoingChildren[0]\r\n\r\n    return (\r\n      <div class={childrenExiting ? style.childrenExiting : ''}>\r\n        {children[0] ? children : outgoingChildren}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","interface TransitionOptions {\r\n  from?: number\r\n  to?: number\r\n  duration?: number\r\n  easing?: string\r\n}\r\n\r\nexport async function transitionHeight(el: HTMLElement, opts: TransitionOptions): Promise<void> {\r\n  const {\r\n    from = el.getBoundingClientRect().height,\r\n    to = el.getBoundingClientRect().height,\r\n    duration = 1000,\r\n    easing = 'ease-in-out',\r\n  } = opts\r\n\r\n  if (from === to || duration === 0) {\r\n    el.style.height = to + 'px'\r\n    return\r\n  }\r\n\r\n  el.style.height = from + 'px'\r\n  // Force a style calc so the browser picks up the start value.\r\n  getComputedStyle(el).transform\r\n  el.style.transition = `height ${duration}ms ${easing}`\r\n  el.style.height = to + 'px'\r\n\r\n  return new Promise<void>(resolve => {\r\n    const listener = (event: Event) => {\r\n      if (event.target !== el) return\r\n      el.style.transition = ''\r\n      el.removeEventListener('transitionend', listener)\r\n      el.removeEventListener('transitioncancel', listener)\r\n      resolve()\r\n    }\r\n\r\n    el.addEventListener('transitionend', listener)\r\n    el.addEventListener('transitioncancel', listener)\r\n  })\r\n}\r\n","import { h, Component } from 'preact'\r\nimport Expander from '../Expander'\r\nimport DataObjectInfo from '../DataObjectInfo'\r\n\r\nimport { graphy } from '../../../Graphy/Instance'\r\n\r\nimport * as style from './style.scss'\r\nimport Layout from '../../../Graphy/classes/Layout'\r\nimport { getEdgeCrossings, calculateEdgeLengthStats } from '../../../Graphy/util'\r\n\r\ninterface Props {}\r\n\r\ninterface State {\r\n  nodeCount: number\r\n  edgeCount: number\r\n  edgeCrossings: number\r\n  edgeStats: {\r\n    mean: number\r\n    stdev: number\r\n  }\r\n}\r\n\r\nexport default class StatusBar extends Component<Props, State> {\r\n  state = {\r\n    nodeCount: 0,\r\n    edgeCount: 0,\r\n    edgeCrossings: 0,\r\n    edgeStats: {\r\n      mean: 0,\r\n      stdev: 0,\r\n    },\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div class={style.statusBar}>\r\n        <Expander>\r\n          <p>Mezgli: {this.state.nodeCount}</p>\r\n          <p>Malas: {this.state.edgeCount}</p>\r\n          <p>Malu krustošanās: {this.state.edgeCrossings} </p>\r\n          <p>Malu vidējais garums: {this.state.edgeStats.mean.toFixed(2)}</p>\r\n          <p>Malu standartnovirze: {this.state.edgeStats.stdev.toFixed(2)}</p>\r\n          <button onClick={this.calculateStats.bind(this)}>Aprēķināt</button>\r\n        </Expander>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.updateNodeEdgeCount()\r\n    graphy.events.subscribe('addNode', () => {\r\n      this.updateNodeEdgeCount()\r\n    })\r\n    graphy.events.subscribe('removeNode', () => {\r\n      this.updateNodeEdgeCount()\r\n    })\r\n    graphy.events.subscribe('addEdge', () => {\r\n      this.updateNodeEdgeCount()\r\n    })\r\n    graphy.events.subscribe('removeNode', () => {\r\n      this.updateNodeEdgeCount()\r\n    })\r\n  }\r\n\r\n  calculateStats() {\r\n    const stats = calculateEdgeLengthStats(graphy.graph)\r\n    this.setState({\r\n      edgeCrossings: getEdgeCrossings(graphy.graph),\r\n      edgeStats: stats,\r\n    })\r\n  }\r\n\r\n  private updateNodeEdgeCount() {\r\n    this.setState({\r\n      nodeCount: graphy.graph.nodesCount,\r\n      edgeCount: graphy.graph.edgesCount,\r\n    })\r\n  }\r\n}\r\n","import { h, Component, ComponentChildren } from 'preact'\r\nimport * as style from './style.scss'\r\n\r\nimport { graphy } from '../../../Graphy/Instance'\r\n\r\ninterface ZoomButtonsProps {\r\n  children: ComponentChildren\r\n}\r\n\r\ninterface ZoomButtonsState {\r\n  zoom: number\r\n}\r\n\r\nexport default class ZoomButtons extends Component<ZoomButtonsProps, ZoomButtonsState> {\r\n  state = {\r\n    zoom: 1,\r\n  }\r\n  protected zoomIn() {\r\n    graphy.events.dispatch('scroll', {\r\n      deltaY: -100,\r\n    })\r\n  }\r\n\r\n  protected zoomOut() {\r\n    graphy.events.dispatch('scroll', {\r\n      deltaY: 100,\r\n    })\r\n  }\r\n\r\n  render(props: ZoomButtonsProps, state: ZoomButtonsState) {\r\n    return (\r\n      <div class={style.container}>\r\n        <button onClick={this.zoomIn} class={style.zoomBtn}>\r\n          +\r\n        </button>\r\n        <button onClick={this.zoomOut} class={style.zoomBtn}>\r\n          -\r\n        </button>\r\n        <span>Zoom {state.zoom.toFixed(1)}x</span>\r\n        {props.children}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  componentDidMount() {\r\n    graphy.events.subscribe('zoomChanged', (zoom: number) => {\r\n      console.log('Zoom ', zoom)\r\n      this.setState({ zoom })\r\n    })\r\n  }\r\n}\r\n","import Graphy from '../Graphy'\r\n\r\nexport default abstract class Parser {\r\n  abstract parse(content: string, graphy: Graphy): void\r\n}\r\n","import Parser from '../classes/Parser'\r\nimport { Node, ArbitraryData, Edge } from '../classes/Graph'\r\nimport Graphy from '../Graphy'\r\n\r\nexport class GraphMLParser extends Parser {\r\n  protected parser: DOMParser\r\n  constructor() {\r\n    super()\r\n    this.parser = new DOMParser()\r\n  }\r\n  parse(content: string, graphy: Graphy): void {\r\n    const g = graphy.graph\r\n    const xml: Document = this.parser.parseFromString(content, 'text/xml')\r\n    const graph = xml.getElementsByTagName('graph')[0]\r\n    const nodes = graph.getElementsByTagName('node')\r\n    const edges = graph.getElementsByTagName('edge')\r\n\r\n    // Clear existing graph\r\n    g.clear()\r\n\r\n    // Loop over nodes\r\n    for (const node of nodes) {\r\n      const attributes = node.getAttributeNames()\r\n      const data: ArbitraryData = {}\r\n      attributes.forEach(attr => {\r\n        data[attr] = node.getAttribute(attr)\r\n      })\r\n      const dataAttrs = node.getElementsByTagName('data')\r\n      for (const dataAttr of dataAttrs) {\r\n        const key = dataAttr.getAttribute('key')\r\n        let value: string | number = dataAttr.innerHTML\r\n        const tmpNum = parseFloat(value)\r\n        if (tmpNum !== NaN) {\r\n          value = tmpNum\r\n        }\r\n        if (key) {\r\n          data[key] = value\r\n        }\r\n      }\r\n      const n: Node = {\r\n        data,\r\n        id: data.id,\r\n      }\r\n      g.addNode(n)\r\n    }\r\n\r\n    // Loop over edges\r\n    for (const edge of edges) {\r\n      const attributes = edge.getAttributeNames()\r\n      const data: ArbitraryData = {}\r\n      attributes.forEach(attr => {\r\n        data[attr] = edge.getAttribute(attr)\r\n      })\r\n      const e: Edge = {\r\n        data,\r\n        source: data.source,\r\n        target: data.target,\r\n        id: data.id,\r\n      }\r\n      g.addEdge(e)\r\n    }\r\n    graphy.events.dispatch('render', null)\r\n  }\r\n}\r\n","import { h, Component } from 'preact'\nimport { GraphMLParser } from '../../../Graphy/parser/GraphMLParser'\nimport { graphy } from '../../../Graphy/Instance'\n\ninterface URLMap {\n  url: string\n  name: string\n}\n\nexport default class Samples extends Component {\n  urls: URLMap[] = [\n    {\n      url: 'examples/Sawmill_36-62.graphml',\n      name: 'Kokzāģētava',\n    },\n    {\n      url: 'examples/Emails.graphml',\n      name: 'E-pasti',\n    },\n    {\n      url: 'examples/Random_992-2545.graphml',\n      name: 'Zinātniskie raksti',\n    },\n  ]\n  render() {\n    const examples = this.urls.map(url => (\n      <button\n        onClick={event => {\n          this.loadSample(url.url)\n        }}\n        key={url.name}\n      >\n        {url.name}\n      </button>\n    ))\n    return (\n      <div>\n        Examples:\n        <br />\n        {examples}\n      </div>\n    )\n  }\n\n  loadSample(url: string) {\n    const parser = new GraphMLParser()\n    fetch(url).then(response => {\n      response.text().then(text => {\n        parser.parse(text, graphy)\n      })\n    })\n  }\n}\n","import { h, Component } from 'preact'\r\nimport { GraphMLParser } from '../../../Graphy/parser/GraphMLParser'\r\nimport { graphy } from '../../../Graphy/Instance'\r\nimport Samples from '../Samples'\r\n\r\nexport default class Importer extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <input type=\"file\" onChange={this.upload} />\r\n        <Samples />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  upload(e: Event) {\r\n    const input = e.target as HTMLInputElement\r\n    if (input.files && input.files.length > 0) {\r\n      const reader = new FileReader()\r\n      const parser = new GraphMLParser()\r\n      reader.onload = (e: Event) => {\r\n        parser.parse((e.target as any).result, graphy)\r\n      }\r\n      reader.readAsText(input.files[0])\r\n    }\r\n  }\r\n}\r\n","import { h, Component } from 'preact'\r\nimport { DataObject } from '../../../Graphy/classes/Graph'\r\nimport Importer from '../Importer'\r\nimport * as style from './style.scss'\r\n\r\nimport { graphy } from '../../../Graphy/Instance'\r\n\r\ninterface DataObjectInfoProps {}\r\n\r\ninterface DataObjectInfoState {\r\n  activeObject: DataObject | null\r\n}\r\n\r\nexport default class DataObjectInfo extends Component<DataObjectInfoProps, DataObjectInfoState> {\r\n  state: DataObjectInfoState = {\r\n    activeObject: null,\r\n  }\r\n\r\n  render(props: DataObjectInfoProps, state: DataObjectInfoState) {\r\n    const visibility = this.state.activeObject ? 'visible' : 'hidden'\r\n\r\n    let nodeContent = (\r\n      <div>\r\n        <h1>Nothing selected</h1>\r\n      </div>\r\n    )\r\n    if (state.activeObject) {\r\n      nodeContent = (\r\n        <div>\r\n          <h1>{this.state.activeObject.id}</h1>\r\n          <p>Position X: {this.state.activeObject.x}</p>\r\n          <p>Position Y: {this.state.activeObject.y}</p>\r\n        </div>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <div class={style.container}>\r\n        <Importer />\r\n        {nodeContent}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  componentDidMount() {\r\n    graphy.events.subscribe('nodeClick', (node: DataObject | null) => {\r\n      this.setState({ activeObject: node })\r\n    })\r\n  }\r\n}\r\n","import { h, Component } from 'preact'\r\nimport Layout from '../../../Graphy/classes/Layout'\r\nimport { graphy } from '../../../Graphy/Instance'\r\nimport Graph from '../../../Graphy/classes/Graph'\r\n\r\nimport * as style from './style.scss'\r\n\r\ninterface LayoutsState {\r\n  selected: Layout\r\n  running: boolean\r\n}\r\n\r\ninterface LayoutsProps {}\r\n\r\nexport default class Layouts extends Component<LayoutsProps, LayoutsState> {\r\n  state = {\r\n    selected: null,\r\n    running: false,\r\n  }\r\n\r\n  private algos: string[] = ['kamada', 'force-atlas', 'fruchterman', 'mds', 'isom']\r\n\r\n  private selectedAlgo: string = 'kamada'\r\n  private iterationCb = null\r\n  private doneCb = null\r\n\r\n  render(props: LayoutsProps, state: LayoutsState) {\r\n    let startStopBtn = null\r\n    if (!state.running) {\r\n      startStopBtn = (\r\n        <button class={style.start} onClick={this.startLayout.bind(this)}>\r\n          Sākt\r\n        </button>\r\n      )\r\n    } else {\r\n      startStopBtn = (\r\n        <button class={style.stop} onClick={this.stopLayout.bind(this)}>\r\n          Beigt\r\n        </button>\r\n      )\r\n    }\r\n\r\n    let runtimeStats = null\r\n    if (state.selected) {\r\n      runtimeStats = (\r\n        <div>\r\n          <p>Init laiks: {state.selected.getInitRuntime().toFixed(2)}</p>\r\n          <p>Kopējais laiks: {state.selected.getTotalRuntime().toFixed(2)}</p>\r\n        </div>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <div class={style.layouts}>\r\n        <p>Izkārtošanas algoritmi</p>\r\n        <select\r\n          disabled={state.running}\r\n          name=\"layout-algo\"\r\n          id=\"layout-algo\"\r\n          onChange={this.changeMethod.bind(this)}\r\n        >\r\n          {this.algos.map(algo => (\r\n            <option value={algo} selected={algo === this.selectedAlgo}>\r\n              {algo}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        {startStopBtn}\r\n        {runtimeStats}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  changeMethod(event: Event) {\r\n    this.selectedAlgo = event.target['value']\r\n  }\r\n\r\n  async startLayout() {\r\n    switch (this.selectedAlgo) {\r\n      case 'kamada':\r\n        const kk = await import(\r\n          /* webpackChunkName: 'layout' */\r\n          '../../../Graphy/layout/KamadaKawai'\r\n        )\r\n        this.setState({\r\n          selected: new kk.default(),\r\n        })\r\n        break\r\n      case 'force-atlas':\r\n        const fa = await import(\r\n          /* webpackChunkName: 'layout' */\r\n          '../../../Graphy/layout/ForceAtlas'\r\n        )\r\n        this.setState({\r\n          selected: new fa.default(),\r\n        })\r\n        break\r\n      case 'fruchterman':\r\n        const fr = await import(\r\n          /* webpackChunkName: 'layout' */\r\n          '../../../Graphy/layout/FruchtermanReingold'\r\n        )\r\n        this.setState({\r\n          selected: new fr.default(),\r\n        })\r\n        break\r\n      case 'mds':\r\n        const mds = await import(\r\n          /* webpackChunkName: 'layout' */\r\n          '../../../Graphy/layout/MDS'\r\n        )\r\n        this.setState({\r\n          selected: new mds.default(),\r\n        })\r\n        break\r\n      case 'isom':\r\n        const isom = await import(\r\n          /* webpackChunkName: 'layout' */\r\n          '../../../Graphy/layout/ISOMv2'\r\n        )\r\n        this.setState({\r\n          selected: new isom.default(),\r\n        })\r\n        break\r\n    }\r\n    if (this.state.selected) {\r\n      this.state.selected.start(graphy.graph)\r\n      this.setState({\r\n        running: true,\r\n      })\r\n      this.iterationCb = this.state.selected.subscribe('iteration', (graph: Graph) => {\r\n        graphy.events.dispatch('render', null)\r\n      })\r\n      this.doneCb = this.state.selected.subscribe('done', (graph: Graph) => {\r\n        this.setState({\r\n          running: false,\r\n        })\r\n      })\r\n    }\r\n  }\r\n\r\n  stopLayout() {\r\n    this.state.selected.stop()\r\n  }\r\n}\r\n","import { h, Component } from 'preact'\nimport { graphy } from '../../../Graphy/Instance'\nimport * as style from './style.scss'\n\nexport default class AddEdge extends Component {\n  render() {\n    return (\n      <div>\n        <p>Pievienot:</p>\n        <button class={style.addBtn} onClick={this.addEdge}>\n          Malu\n        </button>\n        <button class={style.addBtn} onClick={this.addNode}>\n          Mezglu\n        </button>\n      </div>\n    )\n  }\n\n  addEdge() {\n    graphy.events.dispatch('startEdgeAdd', null)\n  }\n\n  addNode() {\n    // graphy.events.dispatch('startNodeAdd', null)\n    const node = {\n      id: 'generated' + Math.floor(Math.random() * 1000),\n      x: Math.random() * 1000,\n      y: Math.random() * 800,\n    }\n    graphy.graph.addNode(node)\n    graphy.events.dispatch('nodeClick', node)\n    graphy.events.dispatch('render', node)\n  }\n}\n","import { h, Component } from 'preact'\r\nimport * as style from './style.scss'\r\nimport StatusBar from './StatusBar'\r\nimport ZoomButtons from './ZoomButtons'\r\nimport DataObjectInfo from './DataObjectInfo'\r\nimport Layouts from './Layouts'\r\nimport AddEdge from './AddEdge'\r\n\r\ninterface ControlsProps {}\r\n\r\ninterface ControlsState {}\r\n\r\nexport default class Controls extends Component<ControlsProps, ControlsState> {\r\n  render() {\r\n    return (\r\n      <div class={style.controls}>\r\n        <DataObjectInfo />\r\n        <ZoomButtons>\r\n          <AddEdge />\r\n        </ZoomButtons>\r\n        <Layouts />\r\n        <StatusBar />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import { h, Component } from 'preact'\r\nimport Canvas from '../Canvas'\r\nimport Controls from '../Controls'\r\n\r\nexport interface AppProps {}\r\n\r\nexport interface AppState {}\r\n\r\nclass App extends Component<AppProps, AppState> {\r\n  render(props) {\r\n    return (\r\n      <div>\r\n        <Canvas />\r\n        <Controls />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n","import { h, render } from 'preact'\r\nimport App from './components/App'\r\nimport './style'\r\n\r\nlet root = document.getElementById('app') as Element\r\n\r\nroot = render(<App />, document.body, root)\r\nroot.setAttribute('id', 'app_root')\r\n\r\nif (process.env.NODE_ENV !== 'production') {\r\n  require('preact/debug')\r\n\r\n  module.hot.accept('./components/App', () => {\r\n    import('./components/App').then(({ default: App }) => {\r\n      root = render(<App />, document.body, root)\r\n    })\r\n  })\r\n}\r\n"],"sourceRoot":""}